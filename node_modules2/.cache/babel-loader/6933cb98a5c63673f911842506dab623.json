{"ast":null,"code":"import _classCallCheck from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\src\\\\pages\\\\task-manage\\\\NavigatorListItems.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Divider from '@material-ui/core/Divider';\nimport Icon from '@material-ui/core/Icon';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '90%'\n    } // button: {\n    //   marginTop: theme.spacing.unit,\n    //   marginRight: theme.spacing.unit,\n    // },\n    // actionsContainer: {\n    //   marginBottom: theme.spacing.unit * 2,\n    // },\n    // resetContainer: {\n    //   padding: theme.spacing.unit * 3,\n    // },\n    // form: {\n    //   width: '100%', // Fix IE 11 issue.\n    //   marginTop: theme.spacing.unit,\n    // },\n    // textField: {\n    //   marginLeft: theme.spacing.unit,\n    //   marginRight: theme.spacing.unit,\n    //   width: 200,\n    // },\n\n  };\n};\n\nvar NavigatorListItems =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NavigatorListItems, _Component);\n\n  function NavigatorListItems(props) {\n    var _this;\n\n    _classCallCheck(this, NavigatorListItems);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NavigatorListItems).call(this, props));\n\n    _this.handleListItemClick = function (event, index) {\n      var selectedIndex = _this.state.selectedIndex;\n      var oldSelectedIndex = selectedIndex;\n\n      _this.setState({\n        selectedIndex: index\n      });\n\n      var callBack = _this.state.callBack;\n      if (index !== oldSelectedIndex && typeof callBack !== \"undefined\" && callBack !== null) callBack(index);\n    };\n\n    _this.state = {\n      callBack: props.callBack,\n      selectedIndex: 0,\n      listItemLabel: {\n        taskManage: '任务管理',\n        securityConfig: '安全配置管理',\n        inspectResult: '检测结果',\n        riskWarning: '风险预警',\n        accountInfo: '账号信息',\n        signupManage: '注册管理',\n        logout: '退出账号'\n      },\n      listItemIcon: {\n        taskManage: \"star\",\n        securityConfig: \"home\",\n        inspectResult: \"language\",\n        riskWarning: \"list\",\n        accountInfo: 'star',\n        signupManage: 'home',\n        logout: 'language'\n      }\n    };\n    return _this;\n  }\n\n  _createClass(NavigatorListItems, [{\n    key: \"getModuleComponent\",\n    value: function getModuleComponent(index, name) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          listItemIcon = _this$state.listItemIcon,\n          listItemLabel = _this$state.listItemLabel;\n      var rowStyle = {\n        backgroundColor: this.state.selectedIndex === index ? '#90CAF9' : 'transparent'\n      };\n      return React.createElement(ListItem, {\n        button: true,\n        style: rowStyle,\n        selected: this.state.selectedIndex === index,\n        onClick: function onClick(event) {\n          return _this2.handleListItemClick(event, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, listItemIcon[name])), React.createElement(ListItemText, {\n        primary: listItemLabel[name],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state2 = this.state,\n          listItemIcon = _this$state2.listItemIcon,\n          listItemLabel = _this$state2.listItemLabel;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.getModuleComponent(0, 'taskManage'), this.getModuleComponent(1, 'securityConfig'), this.getModuleComponent(2, 'inspectResult'), this.getModuleComponent(3, 'riskWarning'), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), this.getModuleComponent(4, 'accountInfo'), this.getModuleComponent(5, 'signupManage'), this.getModuleComponent(6, 'logout'));\n    }\n  }]);\n\n  return NavigatorListItems;\n}(Component);\n\nNavigatorListItems.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nNavigatorListItems.contextTypes = {\n  router: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NavigatorListItems);","map":{"version":3,"sources":["E:\\Develop\\React Projects\\system-config-inspect\\src\\pages\\task-manage\\NavigatorListItems.js"],"names":["React","Component","PropTypes","withStyles","List","ListItem","ListItemIcon","ListItemText","ListSubheader","Divider","Icon","styles","theme","root","width","NavigatorListItems","props","handleListItemClick","event","index","selectedIndex","state","oldSelectedIndex","setState","callBack","listItemLabel","taskManage","securityConfig","inspectResult","riskWarning","accountInfo","signupManage","logout","listItemIcon","name","rowStyle","backgroundColor","classes","getModuleComponent","propTypes","object","isRequired","contextTypes","router"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '90%',\r\n    },\r\n    // button: {\r\n    //   marginTop: theme.spacing.unit,\r\n    //   marginRight: theme.spacing.unit,\r\n    // },\r\n    // actionsContainer: {\r\n    //   marginBottom: theme.spacing.unit * 2,\r\n    // },\r\n    // resetContainer: {\r\n    //   padding: theme.spacing.unit * 3,\r\n    // },\r\n    // form: {\r\n    //   width: '100%', // Fix IE 11 issue.\r\n    //   marginTop: theme.spacing.unit,\r\n    // },\r\n    // textField: {\r\n    //   marginLeft: theme.spacing.unit,\r\n    //   marginRight: theme.spacing.unit,\r\n    //   width: 200,\r\n    // },\r\n\r\n});\r\n\r\n\r\nclass NavigatorListItems extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            callBack: props.callBack,\r\n            selectedIndex: 0,\r\n            listItemLabel: {\r\n                taskManage: '任务管理',\r\n                securityConfig: '安全配置管理',\r\n                inspectResult: '检测结果',\r\n                riskWarning: '风险预警',\r\n                accountInfo: '账号信息',\r\n                signupManage: '注册管理',\r\n                logout: '退出账号',\r\n            },\r\n            listItemIcon: {\r\n                taskManage: \"star\",\r\n                securityConfig: \"home\",\r\n                inspectResult: \"language\",\r\n                riskWarning: \"list\",\r\n                accountInfo: 'star',\r\n                signupManage: 'home',\r\n                logout: 'language',\r\n            },\r\n        };\r\n    }\r\n\r\n    handleListItemClick = (event, index) => {\r\n        const {selectedIndex} = this.state;\r\n        var oldSelectedIndex = selectedIndex;\r\n        this.setState({ selectedIndex: index });\r\n\r\n        var callBack = this.state.callBack;\r\n        if (index !== oldSelectedIndex && typeof(callBack) !== \"undefined\" && callBack !== null)\r\n            callBack(index);\r\n    };\r\n    \r\n\r\n    getModuleComponent(index, name) {\r\n        const {listItemIcon, listItemLabel} = this.state;\r\n        var rowStyle = {\r\n            backgroundColor: this.state.selectedIndex === index ? '#90CAF9' : 'transparent',\r\n        };\r\n        return (\r\n            <ListItem button style={rowStyle} \r\n                selected={this.state.selectedIndex === index}\r\n                onClick={event => this.handleListItemClick(event, index)}\r\n            >\r\n                <ListItemIcon>\r\n                    <Icon>{listItemIcon[name]}</Icon>\r\n                </ListItemIcon>\r\n                <ListItemText primary={listItemLabel[name]} />\r\n            </ListItem>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const {listItemIcon, listItemLabel} = this.state;\r\n        return (\r\n            <div>\r\n                {this.getModuleComponent(0, 'taskManage')}\r\n                {this.getModuleComponent(1, 'securityConfig')}\r\n                {this.getModuleComponent(2, 'inspectResult')}\r\n                {this.getModuleComponent(3, 'riskWarning')}\r\n                <Divider />\r\n                {this.getModuleComponent(4, 'accountInfo')}\r\n                {this.getModuleComponent(5, 'signupManage')}\r\n                {this.getModuleComponent(6, 'logout')}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nNavigatorListItems.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nNavigatorListItems.contextTypes = {\r\n    router: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NavigatorListItems);\r\n\r\n"]},"metadata":{},"sourceType":"module"}