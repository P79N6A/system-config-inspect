{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar WithUtils_1 = require(\"./WithUtils\");\n\nvar getInitialDate = function getInitialDate(_a) {\n  var utils = _a.utils,\n      value = _a.value,\n      initialFocusedDate = _a.initialFocusedDate;\n  var initialDate = value || initialFocusedDate || utils.date();\n  var date = utils.date(initialDate);\n  return utils.isValid(date) ? date : utils.date();\n};\n\nvar BasePicker =\n/** @class */\nfunction (_super) {\n  __extends(BasePicker, _super);\n\n  function BasePicker() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      date: getInitialDate(_this.props),\n      isAccepted: false\n    };\n\n    _this.changeDate = function (date, callback) {\n      return _this.setState({\n        date: date\n      }, callback);\n    };\n\n    _this.handleAcceptedChange = function (isAccepted, callback) {\n      return _this.setState({\n        isAccepted: isAccepted\n      }, callback);\n    };\n\n    _this.handleClear = function () {\n      return _this.props.onChange(null);\n    };\n\n    _this.handleAccept = function () {\n      return _this.props.onChange(_this.state.date);\n    };\n\n    _this.handleSetTodayDate = function () {\n      return _this.handleChange(_this.props.utils.date(), false);\n    };\n\n    _this.handleTextFieldChange = function (date) {\n      var onChange = _this.props.onChange;\n\n      if (date === null) {\n        onChange(null);\n      } else {\n        _this.changeDate(date, function () {\n          return onChange(date);\n        });\n      }\n    };\n\n    _this.pick12hOr24hFormat = function (default12hFormat, default24hFormat) {\n      var _a = _this.props,\n          format = _a.format,\n          ampm = _a.ampm;\n\n      if (format) {\n        return format;\n      }\n\n      return ampm ? default12hFormat : default24hFormat;\n    };\n\n    _this.handleChange = function (newDate, isFinish) {\n      if (isFinish === void 0) {\n        isFinish = true;\n      }\n\n      var _a = _this.props,\n          autoOk = _a.autoOk,\n          onChange = _a.onChange;\n\n      _this.changeDate(newDate, function () {\n        if (isFinish && autoOk) {\n          onChange(newDate); // pass down accept true, and make it false in the next tick\n\n          _this.handleAcceptedChange(true, function () {\n            return _this.handleAcceptedChange(false);\n          });\n        }\n      });\n    };\n\n    _this.handleDismiss = function () {\n      _this.setState({\n        date: getInitialDate(_this.props)\n      });\n    };\n\n    return _this;\n  }\n\n  BasePicker.prototype.componentDidUpdate = function (prevProps) {\n    var _a = this.props,\n        utils = _a.utils,\n        value = _a.value,\n        initialFocusedDate = _a.initialFocusedDate;\n\n    if (prevProps.value !== value || prevProps.utils.locale !== utils.locale || prevProps.initialFocusedDate !== initialFocusedDate) {\n      this.changeDate(getInitialDate(this.props));\n    }\n  };\n\n  BasePicker.prototype.render = function () {\n    return this.props.children(__assign({}, this.state, {\n      utils: this.props.utils,\n      changeDate: this.changeDate,\n      handleAcceptedChange: this.handleAcceptedChange,\n      handleClear: this.handleClear,\n      handleAccept: this.handleAccept,\n      handleDismiss: this.handleDismiss,\n      handleSetTodayDate: this.handleSetTodayDate,\n      handleTextFieldChange: this.handleTextFieldChange,\n      pick12hOr24hFormat: this.pick12hOr24hFormat,\n      handleChange: this.handleChange\n    }));\n  };\n\n  return BasePicker;\n}(React.Component);\n\nexports.BasePicker = BasePicker;\nexports.default = WithUtils_1.withUtils()(BasePicker);","map":null,"metadata":{},"sourceType":"script"}