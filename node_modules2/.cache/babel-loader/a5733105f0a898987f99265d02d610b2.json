{"ast":null,"code":"var IsUserLogin = function IsUserLogin() {\n  var _LoadUserLoginInfo = LoadUserLoginInfo(),\n      user = _LoadUserLoginInfo.user,\n      password = _LoadUserLoginInfo.password,\n      _LoadUserLoginInfo$lo = _LoadUserLoginInfo.login,\n      login = _LoadUserLoginInfo$lo === void 0 ? false : _LoadUserLoginInfo$lo,\n      expire = _LoadUserLoginInfo.expire;\n\n  return login === true; // return true;\n};\n\nvar UserLogin = function UserLogin(user, password, rememberDays) {\n  var expireDate = new Date();\n\n  if (rememberDays > 0) {\n    expireDate.setTime(expireDate.getTime() + rememberDays * 24 * 60 * 60 * 1000);\n  } else {\n    expireDate.setTime(expireDate.getTime() - 1);\n  }\n\n  document.cookie = JSON.stringify({\n    user: user,\n    password: password,\n    login: true,\n    expire: expireDate\n  });\n};\n\nvar UserLogout = function UserLogout() {\n  var _LoadUserLoginInfo2 = LoadUserLoginInfo(),\n      user = _LoadUserLoginInfo2.user,\n      password = _LoadUserLoginInfo2.password,\n      expire = _LoadUserLoginInfo2.expire;\n\n  document.cookie = JSON.stringify({\n    user: user,\n    password: password,\n    login: false,\n    expire: expire\n  });\n};\n\nfunction isEmpty(obj) {\n  if (typeof obj === \"undefined\" || obj === null || obj === \"\") {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvar LoadUserLoginInfo = function LoadUserLoginInfo() {\n  var loginInfo = document.cookie;\n  console.log(loginInfo);\n\n  if (isEmpty(loginInfo)) {\n    return {\n      user: '',\n      password: '',\n      login: false,\n      expire: ''\n    };\n  }\n\n  var value = JSON.parse(loginInfo);\n  return value;\n};\n\nexport { UserLogin, LoadUserLoginInfo, IsUserLogin, UserLogout };","map":{"version":3,"sources":["E:\\Develop\\React Projects\\system-config-inspect\\src\\pages\\login\\UserState.js"],"names":["IsUserLogin","LoadUserLoginInfo","user","password","login","expire","UserLogin","rememberDays","expireDate","Date","setTime","getTime","document","cookie","JSON","stringify","UserLogout","isEmpty","obj","loginInfo","console","log","value","parse"],"mappings":"AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,2BACwBC,iBAAiB,EADzC;AAAA,MACfC,IADe,sBACfA,IADe;AAAA,MACTC,QADS,sBACTA,QADS;AAAA,iDACCC,KADD;AAAA,MACCA,KADD,sCACO,KADP;AAAA,MACcC,MADd,sBACcA,MADd;;AAEtB,SAAOD,KAAK,KAAK,IAAjB,CAFsB,CAGtB;AACH,CAJD;;AAMA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACJ,IAAD,EAAOC,QAAP,EAAiBI,YAAjB,EAAkC;AAChD,MAAIC,UAAU,GAAG,IAAIC,IAAJ,EAAjB;;AACA,MAAIF,YAAY,GAAG,CAAnB,EAAsB;AAClBC,IAAAA,UAAU,CAACE,OAAX,CAAmBF,UAAU,CAACG,OAAX,KAAuBJ,YAAY,GAAG,EAAf,GAAoB,EAApB,GAAyB,EAAzB,GAA8B,IAAxE;AACH,GAFD,MAEO;AACHC,IAAAA,UAAU,CAACE,OAAX,CAAmBF,UAAU,CAACG,OAAX,KAAuB,CAA1C;AACH;;AAEDC,EAAAA,QAAQ,CAACC,MAAT,GAAkBC,IAAI,CAACC,SAAL,CAAe;AAC7Bb,IAAAA,IAAI,EAAEA,IADuB;AAE7BC,IAAAA,QAAQ,EAAEA,QAFmB;AAG7BC,IAAAA,KAAK,EAAE,IAHsB;AAI7BC,IAAAA,MAAM,EAAEG;AAJqB,GAAf,CAAlB;AAMH,CAdD;;AAgBA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,4BACYf,iBAAiB,EAD7B;AAAA,MACdC,IADc,uBACdA,IADc;AAAA,MACRC,QADQ,uBACRA,QADQ;AAAA,MACEE,MADF,uBACEA,MADF;;AAErBO,EAAAA,QAAQ,CAACC,MAAT,GAAkBC,IAAI,CAACC,SAAL,CAAe;AAC7Bb,IAAAA,IAAI,EAAEA,IADuB;AAE7BC,IAAAA,QAAQ,EAAEA,QAFmB;AAG7BC,IAAAA,KAAK,EAAE,KAHsB;AAI7BC,IAAAA,MAAM,EAAEA;AAJqB,GAAf,CAAlB;AAMH,CARD;;AAUA,SAASY,OAAT,CAAiBC,GAAjB,EAAqB;AACjB,MAAG,OAAOA,GAAP,KAAe,WAAf,IAA8BA,GAAG,KAAK,IAAtC,IAA8CA,GAAG,KAAK,EAAzD,EAA4D;AACxD,WAAO,IAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAP;AACH;AACJ;;AAED,IAAMjB,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,MAAIkB,SAAS,GAAGP,QAAQ,CAACC,MAAzB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AAEA,MAAIF,OAAO,CAACE,SAAD,CAAX,EAAwB;AACpB,WAAQ;AACJjB,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,KAAK,EAAE,KAHH;AAIJC,MAAAA,MAAM,EAAE;AAJJ,KAAR;AAMH;;AACD,MAAIiB,KAAK,GAAGR,IAAI,CAACS,KAAL,CAAWJ,SAAX,CAAZ;AACA,SAAOG,KAAP;AACH,CAdD;;AAiBA,SAAShB,SAAT,EAAoBL,iBAApB,EAAuCD,WAAvC,EAAoDgB,UAApD","sourcesContent":["\r\n\r\nconst IsUserLogin = () => {\r\n    const {user, password, login=false, expire} = LoadUserLoginInfo();\r\n    return login === true;\r\n    // return true;\r\n};\r\n\r\nconst UserLogin = (user, password, rememberDays) => {\r\n    let expireDate = new Date();\r\n    if (rememberDays > 0) {\r\n        expireDate.setTime(expireDate.getTime() + rememberDays * 24 * 60 * 60 * 1000);\r\n    } else {\r\n        expireDate.setTime(expireDate.getTime() - 1);\r\n    }\r\n\r\n    document.cookie = JSON.stringify({\r\n        user: user,\r\n        password: password,\r\n        login: true,\r\n        expire: expireDate,\r\n    });\r\n};\r\n\r\nconst UserLogout = () => {\r\n    const {user, password, expire} = LoadUserLoginInfo();\r\n    document.cookie = JSON.stringify({\r\n        user: user,\r\n        password: password,\r\n        login: false,\r\n        expire: expire,\r\n    });\r\n}\r\n\r\nfunction isEmpty(obj){\r\n    if(typeof obj === \"undefined\" || obj === null || obj === \"\"){\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst LoadUserLoginInfo = () => {\r\n    let loginInfo = document.cookie;\r\n    console.log(loginInfo);\r\n\r\n    if (isEmpty(loginInfo)) {\r\n        return ({\r\n            user: '',\r\n            password: '',\r\n            login: false,\r\n            expire: '',\r\n        });\r\n    }\r\n    var value = JSON.parse(loginInfo);\r\n    return value;\r\n};\r\n\r\n\r\nexport { UserLogin, LoadUserLoginInfo, IsUserLogin, UserLogout };\r\n"]},"metadata":{},"sourceType":"module"}