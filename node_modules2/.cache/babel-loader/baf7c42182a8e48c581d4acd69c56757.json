{"ast":null,"code":"import _classCallCheck from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\src\\\\main\\\\AppRouter\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { toastr } from \"react-redux-toastr\";\nimport { Route, withRouter } from 'react-router-dom';\nimport LogIn from '../../login/LogIn'; // import LoginUser from 'service/login-service/LoginUser';\n// import Unauthorized from \"page/error/Unauthorized\";\n\nvar loginUser = function loginUser() {\n  return cookie.load('current-user');\n};\n\nvar isLogin = function isLogin() {\n  var user = loginUser();\n  return typeof user === 'object';\n}; //私有路由，只有登录的用户才能访问\n\n\nvar PrivateRoute =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PrivateRoute, _React$Component);\n\n  function PrivateRoute(props) {\n    var _this;\n\n    _classCallCheck(this, PrivateRoute);\n\n    var user = loginUser();\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PrivateRoute).call(this, props));\n    _this.state = {\n      // isAuth : _loginUser.hasLogin(),\n      isAuth: isLogin()\n    };\n    return _this;\n  }\n\n  _createClass(PrivateRoute, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (!this.state.isAuth) {\n        toastr.error('login timeOut, return to the login page after 3s');\n        var history = this.props.history;\n        setTimeout(function () {\n          history.replace(\"/login\");\n        }, 3000);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.component,\n          _this$props$path = _this$props.path,\n          path = _this$props$path === void 0 ? \"/\" : _this$props$path,\n          _this$props$exact = _this$props.exact,\n          exact = _this$props$exact === void 0 ? false : _this$props$exact,\n          _this$props$strict = _this$props.strict,\n          strict = _this$props$strict === void 0 ? false : _this$props$strict;\n      return this.state.isAuth ? React.createElement(Route, {\n        path: path,\n        exact: exact,\n        strict: strict,\n        render: function render(props) {\n          return React.createElement(Component, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }) : React.createElement(LogIn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PrivateRoute;\n}(React.Component);\n\nexport default withRouter(PrivateRoute);","map":{"version":3,"sources":["E:\\Develop\\React Projects\\system-config-inspect\\src\\main\\AppRouter\\PrivateRoute.js"],"names":["React","toastr","Route","withRouter","LogIn","loginUser","cookie","load","isLogin","user","PrivateRoute","props","state","isAuth","error","history","setTimeout","replace","Component","component","path","exact","strict"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,SAAQC,KAAR,EAAeC,UAAf,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CACA;AAEA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,SAAOC,MAAM,CAACC,IAAP,CAAY,cAAZ,CAAP;AACH,CAFD;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,MAAMC,IAAI,GAAGJ,SAAS,EAAtB;AACA,SAAO,OAAQI,IAAR,KAAkB,QAAzB;AACH,CAHD,C,CAMA;;;IACMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,QAAMF,IAAI,GAAGJ,SAAS,EAAtB;AACA,sFAAMM,KAAN;AACA,UAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,MAAM,EAAGL,OAAO;AAFP,KAAb;AAHe;AAOlB;;;;yCACmB;AAChB,UAAG,CAAC,KAAKI,KAAL,CAAWC,MAAf,EAAsB;AAClBZ,QAAAA,MAAM,CAACa,KAAP,CAAa,kDAAb;AADkB,YAEXC,OAFW,GAEA,KAAKJ,KAFL,CAEXI,OAFW;AAGlBC,QAAAA,UAAU,CAAC,YAAM;AACbD,UAAAA,OAAO,CAACE,OAAR,CAAgB,QAAhB;AACH,SAFS,EAEP,IAFO,CAAV;AAGH;AACJ;;;6BACO;AAAA,wBACiE,KAAKN,KADtE;AAAA,UACeO,SADf,eACIC,SADJ;AAAA,yCAC0BC,IAD1B;AAAA,UAC0BA,IAD1B,iCAC+B,GAD/B;AAAA,0CACoCC,KADpC;AAAA,UACoCA,KADpC,kCAC0C,KAD1C;AAAA,2CACiDC,MADjD;AAAA,UACiDA,MADjD,mCACwD,KADxD;AAEJ,aAAO,KAAKV,KAAL,CAAWC,MAAX,GACH,oBAAC,KAAD;AAAQ,QAAA,IAAI,EAAEO,IAAd;AAAoB,QAAA,KAAK,EAAEC,KAA3B;AAAmC,QAAA,MAAM,EAAEC,MAA3C;AACQ,QAAA,MAAM,EAAE,gBAACX,KAAD;AAAA,iBAAW,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;AAAA,SADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,GAE0D,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFjE;AAGH;;;;EAvBsBX,KAAK,CAACkB,S;;AAyBjC,eAAef,UAAU,CAACO,YAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport {toastr} from \"react-redux-toastr\";\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport LogIn from '../../login/LogIn';\r\n// import LoginUser from 'service/login-service/LoginUser';\r\n\r\n// import Unauthorized from \"page/error/Unauthorized\";\r\n\r\nconst loginUser = () => {\r\n    return cookie.load('current-user');\r\n};\r\n\r\nconst isLogin = () => {\r\n    const user = loginUser();\r\n    return typeof (user) === 'object';\r\n};\r\n\r\n\r\n//私有路由，只有登录的用户才能访问\r\nclass PrivateRoute extends React.Component{\r\n    constructor(props) {\r\n        const user = loginUser();\r\n        super(props);\r\n        this.state = {\r\n            // isAuth : _loginUser.hasLogin(),\r\n            isAuth : isLogin(),\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        if(!this.state.isAuth){\r\n            toastr.error('login timeOut, return to the login page after 3s');\r\n            const {history} = this.props;\r\n            setTimeout(() => {\r\n                history.replace(\"/login\");\r\n            }, 3000)\r\n        }\r\n    }\r\n    render(){\r\n        const { component: Component, path=\"/\", exact=false, strict=false} = this.props;\r\n        return this.state.isAuth ?  (\r\n            <Route  path={path} exact={exact}  strict={strict}\r\n                    render={(props)=>( <Component {...props} /> )} />) : <LogIn />;\r\n    }\r\n}\r\nexport default withRouter(PrivateRoute);"]},"metadata":{},"sourceType":"module"}