{"ast":null,"code":"import _classCallCheck from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\src\\\\pages\\\\task-manage\\\\TaskTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport NewAccountIcon from '@material-ui/icons/PersonAddOutlined';\nimport FirstPageIcon from '@material-ui/icons/FirstPageRounded';\nimport LastPageIcon from '@material-ui/icons/LastPageRounded';\nimport NextPageIcon from '@material-ui/icons/ChevronRightRounded';\nimport PreviousPageIcon from '@material-ui/icons/ChevronLeftRounded';\nimport SearchIcon from '@material-ui/icons/SearchRounded';\nimport ExportIcon from '@material-ui/icons/SaveRounded';\nimport ViewColumnIcon from '@material-ui/icons/ViewColumnRounded';\nimport ExpandDetailIcon from '@material-ui/icons/ChevronRightRounded';\n\nvar actionsStyles = function actionsStyles(theme) {\n  return {\n    root: {\n      flexShrink: 0,\n      color: theme.palette.text.secondary,\n      marginLeft: theme.spacing.unit * 2.5\n    }\n  };\n};\n\nvar counter = 0;\n\nfunction createData(task_name, run_status, change_time) {\n  counter += 1;\n  return {\n    index: counter,\n    task_name: task_name,\n    run_status: run_status,\n    change_time: change_time\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3\n    },\n    table: {\n      minWidth: 500\n    },\n    tableWrapper: {\n      overflowX: 'auto'\n    }\n  };\n};\n\nvar TaskTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaskTable, _React$Component);\n\n  function TaskTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TaskTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TaskTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rows: [createData('任务-1', '已完成', '2018-1-12'), createData('检测本地资产', '已完成', '2018-1-12'), createData('远程检查', '运行中', '2018-1-12'), createData('测试任务-2', '已暂停', '2018-1-12'), createData('测试任务-10', '已完成', '2018-1-12'), createData('任务-1', '已完成', '2018-1-12'), createData('检测本地资产', '已完成', '2018-1-12'), createData('远程检查', '运行中', '2018-1-12'), createData('测试任务-2', '已暂停', '2018-1-12'), createData('测试任务-10', '已完成', '2018-1-12'), createData('任务-1', '已完成', '2018-1-12'), createData('检测本地资产', '已完成', '2018-1-12'), createData('远程检查', '运行中', '2018-1-12'), createData('测试任务-2', '已暂停', '2018-1-12'), createData('测试任务-10', '已完成', '2018-1-12'), createData('任务-1', '已完成', '2018-1-12'), createData('检测本地资产', '已完成', '2018-1-12'), createData('远程检查', '运行中', '2018-1-12'), createData('测试任务-2', '已暂停', '2018-1-12'), createData('测试任务-10', '已完成', '2018-1-12')].sort(function (a, b) {\n        return a.calories < b.calories ? -1 : 1;\n      }),\n      page: 0,\n      rowsPerPage: 5\n    };\n\n    _this.handleChangePage = function (event, page) {\n      _this.setState({\n        page: page\n      });\n    };\n\n    _this.handleChangeRowsPerPage = function (event) {\n      _this.setState({\n        page: 0,\n        rowsPerPage: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TaskTable, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          rows = _this$state.rows,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      var emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n      return React.createElement(MaterialTable, {\n        components: {\n          Toolbar: function Toolbar(props) {\n            return React.createElement(\"div\", {\n              style: {\n                backgroundColor: '#4db6ac'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }, React.createElement(MTableToolbar, Object.assign({}, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            })));\n          }\n        },\n        columns: [{\n          title: '序号',\n          field: 'index',\n          type: 'numeric',\n          width: 100\n        }, {\n          title: '任务名称',\n          field: 'task_name',\n          width: 300\n        }, {\n          title: '运行状态',\n          field: 'run_status',\n          width: 150\n        }, {\n          title: '修改时间',\n          field: 'change_time',\n          type: 'datetime',\n          width: 200\n        }, {\n          title: '查看任务结果',\n          field: 'show_result',\n          width: 200\n        }],\n        data: rows,\n        title: \"\\u68C0\\u6D4B\\u4EFB\\u52A1\\u5217\\u8868\",\n        icons: {\n          FirstPage: FirstPageIcon,\n          LastPage: LastPageIcon,\n          NextPage: NextPageIcon,\n          PreviousPage: PreviousPageIcon,\n          Search: SearchIcon,\n          Export: ExportIcon,\n          ViewColumn: ViewColumnIcon\n        },\n        actions: [{\n          icon: NewAccountIcon,\n          tooltip: 'Show User Info',\n          onClick: function onClick(event, rowData) {\n            alert('You clicked user ' + rowData.name);\n          }\n        }, function (rowData) {\n          return {\n            icon: NewAccountIcon,\n            tooltip: 'Show User Info',\n            disabled: rowData.birthYear >= 2000,\n            onClick: function onClick(event, rowData) {\n              alert('You clicked user ' + rowData.name);\n            }\n          };\n        }, {\n          icon: NewAccountIcon,\n          tooltip: 'Show User Info',\n          onClick: function onClick(event, rowData) {\n            alert('You clicked user ' + rowData.name);\n          },\n          iconProps: {\n            style: {\n              fontSize: 30,\n              color: 'green'\n            }\n          }\n        }],\n        options: {\n          actionsColumnIndex: -1,\n          exportButton: true,\n          pageSizeOptions: [5, 10, 20, 50],\n          pageSize: 5,\n          doubleHorizontalScroll: true,\n          columnsButton: true,\n          sorting: false // selection: true,\n\n        },\n        localization: {\n          header: {\n            actions: '操作'\n          },\n          pagination: {\n            labelDisplayedRows: '{from}-{to} / 总数：{count}',\n            labelRowsPerPage: '每页条数',\n            firstTooltip: '首页',\n            previousTooltip: '上一页',\n            nextTooltip: '下一页',\n            lastTooltip: '最后一页'\n          },\n          toolbar: {\n            exportTitle: '导出',\n            searchTooltip: '查找',\n            addRemoveColumns: '显示列',\n            showColumnsTitle: '显示列'\n          },\n          body: {\n            emptyDataSourceMessage: '没有记录'\n          }\n        },\n        detailPanel: [{\n          tooltip: '展开任务细节',\n          icon: ExpandDetailIcon,\n          render: function render(rowData) {\n            return React.createElement(\"div\", {\n              style: {\n                fontSize: 40,\n                textAlign: 'center',\n                color: 'white',\n                backgroundColor: '#43A047'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181\n              },\n              __self: this\n            }, rowData.task_name);\n          }\n        }],\n        onRowClick: function onRowClick(event, rowData, togglePanel) {\n          return togglePanel(0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TaskTable;\n}(React.Component);\n\nTaskTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TaskTable);","map":{"version":3,"sources":["E:\\Develop\\React Projects\\system-config-inspect\\src\\pages\\task-manage\\TaskTable.js"],"names":["React","PropTypes","withStyles","MaterialTable","MTableToolbar","NewAccountIcon","FirstPageIcon","LastPageIcon","NextPageIcon","PreviousPageIcon","SearchIcon","ExportIcon","ViewColumnIcon","ExpandDetailIcon","actionsStyles","theme","root","flexShrink","color","palette","text","secondary","marginLeft","spacing","unit","counter","createData","task_name","run_status","change_time","index","styles","width","marginTop","table","minWidth","tableWrapper","overflowX","TaskTable","state","rows","sort","a","b","calories","page","rowsPerPage","handleChangePage","event","setState","handleChangeRowsPerPage","target","value","classes","props","emptyRows","Math","min","length","Toolbar","backgroundColor","title","field","type","FirstPage","LastPage","NextPage","PreviousPage","Search","Export","ViewColumn","icon","tooltip","onClick","rowData","alert","name","disabled","birthYear","iconProps","style","fontSize","actionsColumnIndex","exportButton","pageSizeOptions","pageSize","doubleHorizontalScroll","columnsButton","sorting","header","actions","pagination","labelDisplayedRows","labelRowsPerPage","firstTooltip","previousTooltip","nextTooltip","lastTooltip","toolbar","exportTitle","searchTooltip","addRemoveColumns","showColumnsTitle","body","emptyDataSourceMessage","render","textAlign","togglePanel","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport MaterialTable, {MTableToolbar} from 'material-table'\r\n\r\nimport NewAccountIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPageRounded';\r\nimport LastPageIcon from '@material-ui/icons/LastPageRounded';\r\nimport NextPageIcon from '@material-ui/icons/ChevronRightRounded';\r\nimport PreviousPageIcon from '@material-ui/icons/ChevronLeftRounded';\r\nimport SearchIcon from '@material-ui/icons/SearchRounded';\r\nimport ExportIcon from '@material-ui/icons/SaveRounded';\r\nimport ViewColumnIcon from '@material-ui/icons/ViewColumnRounded';\r\nimport ExpandDetailIcon from '@material-ui/icons/ChevronRightRounded';\r\n\r\nconst actionsStyles = theme => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        color: theme.palette.text.secondary,\r\n        marginLeft: theme.spacing.unit * 2.5,\r\n    },\r\n});\r\n\r\n\r\nlet counter = 0;\r\nfunction createData(task_name, run_status, change_time) {\r\n    counter += 1;\r\n    return { index: counter, task_name, run_status, change_time };\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    table: {\r\n        minWidth: 500,\r\n    },\r\n    tableWrapper: {\r\n        overflowX: 'auto',\r\n    },\r\n});\r\n\r\nclass TaskTable extends React.Component {\r\n    state = {\r\n        rows: [\r\n            createData('任务-1', '已完成', '2018-1-12'),\r\n            createData('检测本地资产', '已完成', '2018-1-12'),\r\n            createData('远程检查', '运行中', '2018-1-12'),\r\n            createData('测试任务-2', '已暂停', '2018-1-12'),\r\n            createData('测试任务-10', '已完成', '2018-1-12'),\r\n            createData('任务-1', '已完成', '2018-1-12'),\r\n            createData('检测本地资产', '已完成', '2018-1-12'),\r\n            createData('远程检查', '运行中', '2018-1-12'),\r\n            createData('测试任务-2', '已暂停', '2018-1-12'),\r\n            createData('测试任务-10', '已完成', '2018-1-12'),\r\n            createData('任务-1', '已完成', '2018-1-12'),\r\n            createData('检测本地资产', '已完成', '2018-1-12'),\r\n            createData('远程检查', '运行中', '2018-1-12'),\r\n            createData('测试任务-2', '已暂停', '2018-1-12'),\r\n            createData('测试任务-10', '已完成', '2018-1-12'),\r\n            createData('任务-1', '已完成', '2018-1-12'),\r\n            createData('检测本地资产', '已完成', '2018-1-12'),\r\n            createData('远程检查', '运行中', '2018-1-12'),\r\n            createData('测试任务-2', '已暂停', '2018-1-12'),\r\n            createData('测试任务-10', '已完成', '2018-1-12'),\r\n        ].sort((a, b) => (a.calories < b.calories ? -1 : 1)),\r\n        page: 0,\r\n        rowsPerPage: 5,\r\n    };\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.setState({ page });\r\n    };\r\n\r\n    handleChangeRowsPerPage = event => {\r\n        this.setState({ page: 0, rowsPerPage: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { rows, rowsPerPage, page } = this.state;\r\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n        return (\r\n            <MaterialTable\r\n                components={{\r\n                    Toolbar: props => (\r\n                        <div style={{ backgroundColor: '#4db6ac' }}>\r\n                            <MTableToolbar {...props} />\r\n                        </div>\r\n                    ),\r\n                }}\r\n                columns={[\r\n                    { title: '序号', field: 'index', type: 'numeric', width: 100 },\r\n                    { title: '任务名称', field: 'task_name', width: 300 },\r\n                    { title: '运行状态', field: 'run_status', width: 150 },\r\n                    { title: '修改时间', field: 'change_time', type: 'datetime', width: 200 },\r\n                    { title: '查看任务结果', field: 'show_result', width: 200 },\r\n                ]}\r\n                data={rows}\r\n                title=\"检测任务列表\"\r\n                icons={{\r\n                    FirstPage: FirstPageIcon,\r\n                    LastPage: LastPageIcon,\r\n                    NextPage: NextPageIcon,\r\n                    PreviousPage: PreviousPageIcon,\r\n                    Search: SearchIcon,\r\n                    Export: ExportIcon,\r\n                    ViewColumn: ViewColumnIcon,\r\n                }}\r\n                actions={[\r\n                    {\r\n                        icon: NewAccountIcon,\r\n                        tooltip: 'Show User Info',\r\n                        onClick: (event, rowData) => {\r\n                            alert('You clicked user ' + rowData.name)\r\n                        },\r\n                    },\r\n                    rowData => ({\r\n                        icon: NewAccountIcon,\r\n                        tooltip: 'Show User Info',\r\n                        disabled: rowData.birthYear >= 2000,\r\n                        onClick: (event, rowData) => {\r\n                            alert('You clicked user ' + rowData.name)\r\n                        },\r\n                    }),\r\n                    {\r\n                        icon: NewAccountIcon,\r\n                        tooltip: 'Show User Info',\r\n                        onClick: (event, rowData) => {\r\n                            alert('You clicked user ' + rowData.name)\r\n                        },\r\n                        iconProps: {\r\n                            style: {\r\n                                fontSize: 30,\r\n                                color: 'green',\r\n                            },\r\n                        },\r\n                    },\r\n                ]}\r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    pageSizeOptions: [5, 10, 20, 50],\r\n                    pageSize: 5,\r\n                    doubleHorizontalScroll: true,\r\n                    columnsButton: true,\r\n                    sorting: false,\r\n                    // selection: true,\r\n                }}\r\n                localization={{\r\n                    header: {\r\n                        actions: '操作',\r\n                    },\r\n                    pagination: {\r\n                        labelDisplayedRows: '{from}-{to} / 总数：{count}',\r\n                        labelRowsPerPage: '每页条数',\r\n                        firstTooltip: '首页',\r\n                        previousTooltip: '上一页',\r\n                        nextTooltip: '下一页',\r\n                        lastTooltip: '最后一页',\r\n                    },\r\n                    toolbar: {\r\n                        exportTitle: '导出',\r\n                        searchTooltip: '查找',\r\n                        addRemoveColumns: '显示列',\r\n                        showColumnsTitle: '显示列',\r\n                    },\r\n                    body: {\r\n                        emptyDataSourceMessage: '没有记录',\r\n                    }\r\n                }}\r\n                detailPanel={[\r\n                    {\r\n                      tooltip: '展开任务细节',\r\n                      icon: ExpandDetailIcon,\r\n                      render: rowData => {\r\n                        return (\r\n                          <div\r\n                            style={{\r\n                              fontSize: 40,\r\n                              textAlign: 'center',\r\n                              color: 'white',\r\n                              backgroundColor: '#43A047',\r\n                            }}\r\n                          >\r\n                            {rowData.task_name}\r\n                          </div>\r\n                        )\r\n                      },\r\n                    },\r\n                  ]}\r\n                  onRowClick={(event, rowData, togglePanel) => togglePanel(0)}\r\n\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nTaskTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TaskTable);\r\n"]},"metadata":{},"sourceType":"module"}