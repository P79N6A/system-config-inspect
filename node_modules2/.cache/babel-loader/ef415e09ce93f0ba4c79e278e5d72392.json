{"ast":null,"code":"import _classCallCheck from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\src\\\\main\\\\AppRouter\\\\index.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport RoutersMap from './router-map';\nimport connect from 'react-redux';\n\nvar AppRouter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppRouter, _Component);\n\n  function AppRouter() {\n    _classCallCheck(this, AppRouter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppRouter).apply(this, arguments));\n  }\n\n  _createClass(AppRouter, [{\n    key: \"render\",\n    value: function render() {\n      var token = this.props.token;\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, RoutersMap.map(function (item, index) {\n        return React.createElement(Route, {\n          key: index,\n          path: item.path,\n          exact: true,\n          render: function render(props) {\n            return !item.auth ? React.createElement(item.component, Object.assign({}, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 17\n              },\n              __self: this\n            })) : token ? React.createElement(item.component, Object.assign({}, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 19\n              },\n              __self: this\n            })) : React.createElement(Redirect, {\n              to: {\n                pathname: '/login',\n                state: {\n                  from: props.location\n                }\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return AppRouter;\n}(Component); // redux拿到token并挂载到App的props上面\n\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    token: state.token\n  };\n};\n\nexport default connect(mapStateToProps)(AppRouter);","map":{"version":3,"sources":["E:\\Develop\\React Projects\\system-config-inspect\\src\\main\\AppRouter\\index.js"],"names":["React","Component","BrowserRouter","Router","Route","Redirect","Switch","RoutersMap","connect","AppRouter","token","props","map","item","index","path","auth","pathname","state","from","location","mapStateToProps","ownProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmDC,MAAnD,QAAiE,kBAAjE;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,aAApB;;IAEMC,S;;;;;;;;;;;;;6BACO;AACL,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;AACA,aACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,UAAU,CAACK,GAAX,CAAe,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC7B,eACI,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,KAAZ;AAAmB,UAAA,IAAI,EAAED,IAAI,CAACE,IAA9B;AAAoC,UAAA,KAAK,MAAzC;AAA0C,UAAA,MAAM,EAAE,gBAAAJ,KAAK;AAAA,mBAClD,CAACE,IAAI,CAACG,IAAN,GACI,oBAAC,IAAD,CAAM,SAAN,oBAAoBL,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,GAEID,KAAK,GACF,oBAAC,IAAD,CAAM,SAAN,oBAAoBC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADE,GAEF,oBAAC,QAAD;AAAU,cAAA,EAAE,EAAE;AAACM,gBAAAA,QAAQ,EAAE,QAAX;AAAqBC,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,IAAI,EAAER,KAAK,CAACS;AAAb;AAA5B,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAL2C;AAAA,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,OAXA,CADL,CADJ,CADJ,CADJ;AAoBH;;;;EAvBmBnB,S,GA0BxB;;;AACA,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAQI,QAAR,EAAqB;AACzC,SAAO;AAAEZ,IAAAA,KAAK,EAAEQ,KAAK,CAACR;AAAf,GAAP;AACH,CAFD;;AAIA,eAAeF,OAAO,CAACa,eAAD,CAAP,CAAyBZ,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\r\nimport RoutersMap from './router-map'\r\nimport connect from 'react-redux'\r\n\r\nclass AppRouter extends Component {\r\n    render() {\r\n        let token = this.props.token\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        {RoutersMap.map((item, index) => {\r\n                            return (\r\n                                <Route key={index} path={item.path} exact render={props =>\r\n                                    (!item.auth ? \r\n                                        (<item.component {...props} />) : \r\n                                        (token ? \r\n                                            <item.component {...props} /> :\r\n                                            <Redirect to={{pathname: '/login', state: {from: props.location}\r\n                                        }} />)\r\n                                    )} />\r\n                            )\r\n                        })}\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\n// redux拿到token并挂载到App的props上面\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { token: state.token }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AppRouter)"]},"metadata":{},"sourceType":"module"}