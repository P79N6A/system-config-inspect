{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.findClosestEnabledDate = function (_a) {\n  var date = _a.date,\n      utils = _a.utils,\n      minDate = _a.minDate,\n      maxDate = _a.maxDate,\n      disableFuture = _a.disableFuture,\n      disablePast = _a.disablePast,\n      shouldDisableDate = _a.shouldDisableDate;\n  var today = utils.startOfDay(utils.date());\n  minDate = minDate && utils.date(minDate);\n  maxDate = maxDate && utils.date(maxDate);\n\n  if (disablePast && utils.isBefore(minDate, today)) {\n    minDate = today;\n  }\n\n  if (disableFuture && utils.isAfter(maxDate, today)) {\n    maxDate = today;\n  }\n\n  var forward = utils.date(date);\n  var backward = utils.date(date);\n\n  if (utils.isBefore(date, minDate)) {\n    forward = minDate;\n    backward = null;\n  }\n\n  if (utils.isAfter(date, maxDate)) {\n    if (backward) {\n      backward = maxDate;\n    }\n\n    forward = null;\n  }\n\n  while (forward || backward) {\n    if (forward && utils.isAfter(forward, maxDate)) {\n      forward = null;\n    }\n\n    if (backward && utils.isBefore(backward, minDate)) {\n      backward = null;\n    }\n\n    if (forward) {\n      if (!shouldDisableDate(forward)) {\n        return forward;\n      }\n\n      forward = utils.addDays(forward, 1);\n    }\n\n    if (backward) {\n      if (!shouldDisableDate(backward)) {\n        return backward;\n      }\n\n      backward = utils.addDays(backward, -1);\n    }\n  }\n\n  return null;\n};","map":null,"metadata":{},"sourceType":"script"}