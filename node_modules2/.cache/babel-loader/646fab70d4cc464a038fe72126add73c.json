{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _core = require(\"@material-ui/core\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n/* eslint-disable no-unused-vars */\n\n/* eslint-enable no-unused-vars */\n\n\nvar MTableBodyRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(MTableBodyRow, _React$Component);\n\n  function MTableBodyRow() {\n    (0, _classCallCheck2.default)(this, MTableBodyRow);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MTableBodyRow).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(MTableBodyRow, [{\n    key: \"renderColumns\",\n    value: function renderColumns() {\n      var _this = this;\n\n      var mapArr = this.props.columns.filter(function (columnDef) {\n        return !columnDef.hidden && !(columnDef.tableData.groupOrder > -1);\n      }).map(function (columnDef) {\n        var value = _this.props.getFieldValue(_this.props.data, columnDef);\n\n        return React.createElement(_this.props.components.Cell, {\n          icons: _this.props.icons,\n          columnDef: columnDef,\n          value: value,\n          key: columnDef.tableData.id,\n          rowData: _this.props.data\n        });\n      });\n      return mapArr;\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this2 = this;\n\n      return React.createElement(_core.TableCell, {\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0\n        },\n        key: \"key-actions-column\"\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, React.createElement(this.props.components.Actions, {\n        data: this.props.data,\n        actions: this.props.actions.filter(function (a) {\n          return !a.isFreeAction && !_this2.props.options.selection;\n        })\n      })));\n    }\n  }, {\n    key: \"renderSelectionColumn\",\n    value: function renderSelectionColumn() {\n      var _this3 = this;\n\n      return React.createElement(_core.TableCell, {\n        padding: \"none\",\n        key: \"key-selection-column\"\n      }, React.createElement(_core.Checkbox, {\n        checked: this.props.data.tableData.checked === true,\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        },\n        value: this.props.data.tableData.id.toString(),\n        onChange: function onChange(event) {\n          return _this3.props.onRowSelected(event, _this3.props.path);\n        }\n      }));\n    }\n  }, {\n    key: \"renderDetailPanelColumn\",\n    value: function renderDetailPanelColumn() {\n      var _this4 = this;\n\n      var rotateIconStyle = function rotateIconStyle(isOpen) {\n        return {\n          transform: isOpen ? 'rotate(90deg)' : 'none'\n        };\n      };\n\n      var CustomIcon = function CustomIcon(_ref) {\n        var icon = _ref.icon,\n            style = _ref.style;\n        return typeof icon === \"string\" ? React.createElement(_core.Icon, {\n          style: style\n        }, icon) : React.createElement(icon, {\n          style: style\n        });\n      };\n\n      if (typeof this.props.detailPanel == 'function') {\n        return React.createElement(_core.TableCell, {\n          padding: \"none\",\n          key: \"key-detail-panel-column\",\n          style: {\n            width: 48,\n            textAlign: 'center'\n          }\n        }, React.createElement(_core.IconButton, {\n          style: (0, _objectSpread2.default)({\n            transition: 'all ease 200ms'\n          }, rotateIconStyle(this.props.data.tableData.showDetailPanel)),\n          onClick: function onClick(event) {\n            _this4.props.onToggleDetailPanel(_this4.props.path, _this4.props.detailPanel);\n\n            event.stopPropagation();\n          }\n        }, React.createElement(this.props.icons.DetailPanel, null)));\n      } else {\n        return React.createElement(_core.TableCell, {\n          padding: \"none\",\n          key: \"key-detail-panel-column\",\n          style: {\n            width: 48 * this.props.detailPanel.length,\n            textAlign: 'center'\n          }\n        }, this.props.detailPanel.map(function (panel, index) {\n          var isOpen = _this4.props.data.tableData.showDetailPanel === panel.render;\n          var iconButton = React.createElement(_this4.props.icons.DetailPanel, null);\n          var animation = true;\n\n          if (isOpen) {\n            if (panel.openIcon) {\n              iconButton = React.createElement(CustomIcon, {\n                icon: panel.openIcon\n              });\n              animation = false;\n            } else if (panel.icon) {\n              iconButton = React.createElement(CustomIcon, {\n                icon: panel.icon\n              });\n            }\n          } else if (panel.icon) {\n            iconButton = React.createElement(CustomIcon, {\n              icon: panel.icon\n            });\n            animation = false;\n          }\n\n          iconButton = React.createElement(_core.IconButton, {\n            key: \"key-detail-panel-\" + index,\n            style: (0, _objectSpread2.default)({\n              transition: 'all ease 200ms'\n            }, rotateIconStyle(animation && isOpen)),\n            onClick: function onClick(event) {\n              _this4.props.onToggleDetailPanel(_this4.props.path, panel.render);\n\n              event.stopPropagation();\n            }\n          }, iconButton);\n\n          if (panel.tooltip) {\n            iconButton = React.createElement(_core.Tooltip, {\n              key: \"key-detail-panel-\" + index,\n              title: panel.tooltip\n            }, iconButton);\n          }\n\n          return iconButton;\n        }));\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      if (!this.props.options.rowStyle) {\n        return {\n          cursor: this.props.onRowClick ? 'pointer' : ''\n        };\n      }\n\n      var style = this.props.options.rowStyle;\n\n      if (typeof this.props.options.rowStyle === \"function\") {\n        style = this.props.options.rowStyle(this.props.data);\n      }\n\n      return style;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var columns = this.renderColumns();\n\n      if (this.props.options.selection) {\n        columns.splice(0, 0, this.renderSelectionColumn());\n      }\n\n      if (this.props.actions && this.props.actions.filter(function (a) {\n        return !a.isFreeAction && !_this5.props.options.selection;\n      }).length > 0) {\n        if (this.props.options.actionsColumnIndex === -1) {\n          columns.push(this.renderActions());\n        } else if (this.props.options.actionsColumnIndex >= 0) {\n          var endPos = 0;\n\n          if (this.props.options.selection) {\n            endPos = 1;\n          }\n\n          columns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());\n        }\n      } // Lastly we add detail panel icon\n\n\n      if (this.props.detailPanel) {\n        columns.splice(0, 0, this.renderDetailPanelColumn());\n      }\n\n      this.props.columns.filter(function (columnDef) {\n        return columnDef.tableData.groupOrder > -1;\n      }).forEach(function (columnDef) {\n        columns.splice(0, 0, React.createElement(_core.TableCell, {\n          padding: \"none\",\n          key: \"key-group-cell\" + columnDef.tableData.id\n        }));\n      });\n      return React.createElement(React.Fragment, null, React.createElement(_core.TableRow, {\n        selected: this.props.index % 2 === 0,\n        hover: this.props.onRowClick ? true : false,\n        style: this.getStyle(),\n        onClick: function onClick(event) {\n          _this5.props.onRowClick && _this5.props.onRowClick(event, _this5.props.data, function (panelIndex) {\n            var panel = _this5.props.detailPanel;\n\n            if (Array.isArray(panel)) {\n              panel = panel[panelIndex || 0].render;\n            }\n\n            _this5.props.onToggleDetailPanel(_this5.props.path, panel);\n          });\n        }\n      }, columns), this.props.data.tableData && this.props.data.tableData.showDetailPanel && React.createElement(_core.TableRow, {\n        selected: this.props.index % 2 === 0\n      }, React.createElement(_core.TableCell, {\n        colSpan: columns.length,\n        padding: \"none\"\n      }, this.props.data.tableData.showDetailPanel(this.props.data))));\n    }\n  }]);\n  return MTableBodyRow;\n}(React.Component);\n\nexports.default = MTableBodyRow;\nMTableBodyRow.defaultProps = {\n  actions: [],\n  index: 0,\n  data: {},\n  options: {},\n  path: []\n};\nMTableBodyRow.propTypes = {\n  actions: _propTypes.default.array,\n  icons: _propTypes.default.any.isRequired,\n  index: _propTypes.default.number.isRequired,\n  data: _propTypes.default.object.isRequired,\n  detailPanel: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.arrayOf(_propTypes.default.object)]),\n  options: _propTypes.default.object.isRequired,\n  onRowSelected: _propTypes.default.func,\n  path: _propTypes.default.arrayOf(_propTypes.default.number),\n  getFieldValue: _propTypes.default.func.isRequired,\n  columns: _propTypes.default.array,\n  onToggleDetailPanel: _propTypes.default.func.isRequired,\n  onRowClick: _propTypes.default.func\n};","map":null,"metadata":{},"sourceType":"script"}