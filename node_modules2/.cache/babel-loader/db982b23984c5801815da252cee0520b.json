{"ast":null,"code":"import _classCallCheck from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\src\\\\utils\\\\private-route.js\";\nimport { Route, Redirect, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport storage from 'utils/storage.js'; //私有路由，只有登录的用户才能访问\n\nvar PrivateRoute =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PrivateRoute, _React$Component);\n\n  function PrivateRoute() {\n    _classCallCheck(this, PrivateRoute);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PrivateRoute).apply(this, arguments));\n  }\n\n  _createClass(PrivateRoute, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var isAuthenticated = storage.getItem(\"token\") ? true : false;\n      this.setState({\n        isAuthenticated: isAuthenticated\n      });\n\n      if (!isAuthenticated) {\n        var history = this.props.history;\n        setTimeout(function () {\n          history.replace(\"/login\");\n        }, 1000);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.component,\n          _this$props$path = _this$props.path,\n          path = _this$props$path === void 0 ? \"/\" : _this$props$path,\n          _this$props$exact = _this$props.exact,\n          exact = _this$props$exact === void 0 ? false : _this$props$exact,\n          _this$props$strict = _this$props.strict,\n          strict = _this$props$strict === void 0 ? false : _this$props$strict;\n      return this.state.isAuthenticated ? React.createElement(Route, {\n        path: path,\n        exact: exact,\n        strict: strict,\n        render: function render(props) {\n          return React.createElement(Component, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }) : \"请重新登录\";\n    }\n  }]);\n\n  return PrivateRoute;\n}(React.Component);\n\nPrivateRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  exact: PropTypes.bool,\n  strict: PropTypes.bool,\n  component: PropTypes.func.isRequired\n};\nexport default withRouter(PrivateRoute); // import React from 'react'\n// import { Route, Redirect, } from 'react-router-dom'\n// import { UserIsAuthenticated } from './session'\n// const PrivateRoute = ({ component: Component, ...rest }) => (\n//   <Route {...rest} render={(props) => (\n//     !!UserIsAuthenticated()\n//       ? <Component {...props} />\n//       : <Redirect to={{\n//         pathname: '/login',\n//         state: { from: props.location }\n//       }} />\n//   )} />\n// )\n// export default PrivateRoute","map":{"version":3,"sources":["E:\\Develop\\React Projects\\system-config-inspect\\src\\utils\\private-route.js"],"names":["Route","Redirect","withRouter","PropTypes","storage","PrivateRoute","isAuthenticated","getItem","setState","history","props","setTimeout","replace","Component","component","path","exact","strict","state","React","propTypes","string","isRequired","bool","func"],"mappings":";;;;;;AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,UAAvB,QAAwC,kBAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CACA;;IACMC,Y;;;;;;;;;;;;;yCACkB;AAChB,UAAKC,eAAe,GAAIF,OAAO,CAACG,OAAR,CAAgB,OAAhB,IAA2B,IAA3B,GAAiC,KAAzD;AACA,WAAKC,QAAL,CAAc;AAACF,QAAAA,eAAe,EAACA;AAAjB,OAAd;;AACA,UAAG,CAACA,eAAJ,EAAoB;AAAA,YACXG,OADW,GACA,KAAKC,KADL,CACXD,OADW;AAElBE,QAAAA,UAAU,CAAC,YAAM;AACfF,UAAAA,OAAO,CAACG,OAAR,CAAgB,QAAhB;AACD,SAFS,EAEP,IAFO,CAAV;AAGD;AACJ;;;6BACO;AAAA,wBAC4D,KAAKF,KADjE;AAAA,UACaG,SADb,eACEC,SADF;AAAA,yCACuBC,IADvB;AAAA,UACuBA,IADvB,iCAC4B,GAD5B;AAAA,0CACgCC,KADhC;AAAA,UACgCA,KADhC,kCACsC,KADtC;AAAA,2CAC4CC,MAD5C;AAAA,UAC4CA,MAD5C,mCACmD,KADnD;AAEJ,aAAO,KAAKC,KAAL,CAAWZ,eAAX,GACH,oBAAC,KAAD;AAAQ,QAAA,IAAI,EAAES,IAAd;AAAoB,QAAA,KAAK,EAAEC,KAA3B;AAAmC,QAAA,MAAM,EAAEC,MAA3C;AAAoD,QAAA,MAAM,EAAE,gBAACP,KAAD;AAAA,iBAAW,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;AAAA,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,GAEF,OAFL;AAGH;;;;EAhBsBS,KAAK,CAACN,S;;AAkBjCR,YAAY,CAACe,SAAb,GAAyB;AACjBL,EAAAA,IAAI,EAACZ,SAAS,CAACkB,MAAV,CAAiBC,UADL;AAEjBN,EAAAA,KAAK,EAACb,SAAS,CAACoB,IAFC;AAGjBN,EAAAA,MAAM,EAACd,SAAS,CAACoB,IAHA;AAIjBT,EAAAA,SAAS,EAACX,SAAS,CAACqB,IAAV,CAAeF;AAJR,CAAzB;AAMA,eAAepB,UAAU,CAACG,YAAD,CAAzB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import {Route,Redirect,withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport storage from 'utils/storage.js';\r\n//私有路由，只有登录的用户才能访问\r\nclass PrivateRoute extends React.Component{\r\n    componentWillMount(){\r\n        let  isAuthenticated =  storage.getItem(\"token\") ? true :false;\r\n        this.setState({isAuthenticated:isAuthenticated})\r\n        if(!isAuthenticated){\r\n          const {history} = this.props;\r\n          setTimeout(() => {\r\n            history.replace(\"/login\");\r\n          }, 1000)\r\n        }\r\n    }\r\n    render(){\r\n        let { component: Component,path=\"/\",exact=false,strict=false} = this.props;\r\n        return this.state.isAuthenticated ?  (\r\n            <Route  path={path} exact={exact}  strict={strict}  render={(props)=>( <Component {...props} /> )} />\r\n        ) : (\"请重新登录\");\r\n    }\r\n}\r\nPrivateRoute.propTypes  ={\r\n        path:PropTypes.string.isRequired,\r\n        exact:PropTypes.bool,\r\n        strict:PropTypes.bool,\r\n        component:PropTypes.func.isRequired\r\n}\r\nexport default withRouter(PrivateRoute);\r\n\r\n// import React from 'react'\r\n// import { Route, Redirect, } from 'react-router-dom'\r\n// import { UserIsAuthenticated } from './session'\r\n\r\n// const PrivateRoute = ({ component: Component, ...rest }) => (\r\n//   <Route {...rest} render={(props) => (\r\n//     !!UserIsAuthenticated()\r\n//       ? <Component {...props} />\r\n//       : <Redirect to={{\r\n//         pathname: '/login',\r\n//         state: { from: props.location }\r\n//       }} />\r\n//   )} />\r\n// )\r\n\r\n// export default PrivateRoute"]},"metadata":{},"sourceType":"module"}