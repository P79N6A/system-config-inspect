{"ast":null,"code":"import _classCallCheck from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\src\\\\login\\\\LoginForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nvar LoginFrom =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginFrom, _React$Component);\n\n  function LoginFrom() {\n    var _this;\n\n    _classCallCheck(this, LoginFrom);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginFrom).call(this));\n\n    _this.handleSubmit = function (e) {\n      //提交之前判断输入的字段是否有错误\n      e.preventDefault();\n      var history = _this.props.history;\n\n      _this.props.form.validateFields(function (errors, values) {\n        if (!errors) {\n          console.log('Received values of form: ', values);\n          history.push('/View');\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginFrom, [{\n    key: \"render\",\n    value: function render() {\n      //Form.create 包装的组件会自带this.props.form属性，该属性提供了一系列API，包括以下4个\n      //getFieldDecorator用于和表单进行双向绑定\n      //isFieldTouched判断一个输入控件是否经历过 getFieldDecorator 的值收集时机 options.trigger(收集子节点的值的时机，默认时onChange)\n      //getFieldError获取某个输入控件的 Error\n      //获取一组输入控件的 Error ，如不传入参数，则获取全部组件的 Error\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldsError = _this$props$form.getFieldsError,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched;\n      var userNameError = isFieldTouched('userName') && getFieldError('userName');\n      var passWordError = isFieldTouched('password') && getFieldError('password');\n      return React.createElement(\"div\", {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"MSPA\")), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        validateStatus: userNameError ? 'error' : '' //validateStatus为校验状态，如不设置，则会根据校验规则自动生成，可选：'success' 'warning' 'error' 'validating'\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: \"Please input your username!\"\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        validateStatus: passWordError ? \"error\" : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, getFieldDecorator('passWord', {\n        rules: [{\n          required: true,\n          message: \"Please input your Password!\"\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }),\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        disabled: hasErrors(getFieldsError),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"\\u767B\\u5F55\")))));\n    }\n  }]);\n\n  return LoginFrom;\n}(React.Component);\n\nvar LoginForm = Form.create()(LoginFrom);\nexport default LoginForm;","map":{"version":3,"sources":["E:\\Develop\\React Projects\\system-config-inspect\\src\\login\\LoginForm.js"],"names":["React","PropTypes","Avatar","Button","CssBaseline","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockOutlinedIcon","Paper","Typography","withStyles","LoginFrom","handleSubmit","e","preventDefault","history","props","form","validateFields","errors","values","console","log","push","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","userNameError","passWordError","rules","required","message","color","hasErrors","Component","LoginForm","Form","create"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\n\r\nclass LoginFrom extends React.Component{\r\n    constructor(){\r\n        super()\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        //提交之前判断输入的字段是否有错误\r\n        e.preventDefault();\r\n        \r\n        let history = this.props.history;\r\n        this.props.form.validateFields((errors,values)=>{\r\n            if (!errors) {\r\n                console.log('Received values of form: ', values);\r\n                history.push('/View');\r\n              }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        //Form.create 包装的组件会自带this.props.form属性，该属性提供了一系列API，包括以下4个\r\n        //getFieldDecorator用于和表单进行双向绑定\r\n        //isFieldTouched判断一个输入控件是否经历过 getFieldDecorator 的值收集时机 options.trigger(收集子节点的值的时机，默认时onChange)\r\n        //getFieldError获取某个输入控件的 Error\r\n        //获取一组输入控件的 Error ，如不传入参数，则获取全部组件的 Error\r\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        const userNameError = isFieldTouched('userName') && getFieldError('userName');\r\n        const passWordError = isFieldTouched('password') && getFieldError('password');\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"login-form\">\r\n                    <div className=\"login-logo\">\r\n                        <div className=\"login-name\">MSPA</div>\r\n                    </div>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        {/* 一个FromItem中放一个被 getFieldDecorator 装饰过的 child */}\r\n                        <Form.Item\r\n                            validateStatus={userNameError ? 'error' : ''}//validateStatus为校验状态，如不设置，则会根据校验规则自动生成，可选：'success' 'warning' 'error' 'validating'\r\n                        >\r\n                        {\r\n                            getFieldDecorator('userName',{\r\n                                rules:[{required:true,message:\"Please input your username!\"}]\r\n                            })(\r\n                                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }}/>}\r\n                                        placeholder=\"Username\"\r\n                                />\r\n                            )\r\n                        }\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            validateStatus={passWordError ? \"error\" : ''}\r\n                        >\r\n                        {\r\n                            getFieldDecorator('passWord',{\r\n                                rules:[{required:true,message:\"Please input your Password!\"}]\r\n                            })(\r\n                                <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }}/>}\r\n                                        placeholder=\"Password\"\r\n                                />\r\n                            )\r\n                        }\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                disabled={hasErrors(getFieldsError)}\r\n                            >登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet LoginForm = Form.create()(LoginFrom);\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}