{"ast":null,"code":"import _classCallCheck from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\src\\\\pages\\\\task-manage\\\\TaskTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nvar actionsStyles = function actionsStyles(theme) {\n  return {\n    root: {\n      flexShrink: 0,\n      color: theme.palette.text.secondary,\n      marginLeft: theme.spacing.unit * 2.5\n    }\n  };\n};\n\nvar TablePaginationActions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TablePaginationActions, _React$Component);\n\n  function TablePaginationActions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TablePaginationActions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TablePaginationActions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleFirstPageButtonClick = function (event) {\n      _this.props.onChangePage(event, 0);\n    };\n\n    _this.handleBackButtonClick = function (event) {\n      _this.props.onChangePage(event, _this.props.page - 1);\n    };\n\n    _this.handleNextButtonClick = function (event) {\n      _this.props.onChangePage(event, _this.props.page + 1);\n    };\n\n    _this.handleLastPageButtonClick = function (event) {\n      _this.props.onChangePage(event, Math.max(0, Math.ceil(_this.props.count / _this.props.rowsPerPage) - 1));\n    };\n\n    return _this;\n  }\n\n  _createClass(TablePaginationActions, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          count = _this$props.count,\n          page = _this$props.page,\n          rowsPerPage = _this$props.rowsPerPage,\n          theme = _this$props.theme;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: this.handleFirstPageButtonClick,\n        disabled: page === 0,\n        \"aria-label\": \"First Page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, theme.direction === 'rtl' ? React.createElement(LastPageIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }) : React.createElement(FirstPageIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        onClick: this.handleBackButtonClick,\n        disabled: page === 0,\n        \"aria-label\": \"Previous Page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : React.createElement(KeyboardArrowLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        onClick: this.handleNextButtonClick,\n        disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n        \"aria-label\": \"Next Page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }) : React.createElement(KeyboardArrowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        onClick: this.handleLastPageButtonClick,\n        disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n        \"aria-label\": \"Last Page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, theme.direction === 'rtl' ? React.createElement(FirstPageIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }) : React.createElement(LastPageIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TablePaginationActions;\n}(React.Component);\n\nTablePaginationActions.propTypes = {\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired\n};\nvar TablePaginationActionsWrapped = withStyles(actionsStyles, {\n  withTheme: true\n})(TablePaginationActions);\nvar counter = 0;\n\nfunction createData(name, runStatus, changeTime) {\n  counter += 1;\n  return {\n    id: counter,\n    name: name,\n    runStatus: runStatus,\n    changeTime: changeTime\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3\n    },\n    table: {\n      minWidth: 500\n    },\n    tableWrapper: {\n      overflowX: 'auto'\n    }\n  };\n};\n\nvar TaskTable =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(TaskTable, _React$Component2);\n\n  function TaskTable() {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    _classCallCheck(this, TaskTable);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(TaskTable)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this2.state = {\n      rows: [createData('任务-1', '已完成', '2018-1-12'), createData('检测本地资产', '已完成', '2018-1-12'), createData('远程检查', '运行中', '2018-1-12'), createData('测试任务-2', '已暂停', '2018-1-12'), createData('测试任务-10', '已完成', '2018-1-12'), createData('任务-1', '已完成', '2018-1-12'), createData('检测本地资产', '已完成', '2018-1-12'), createData('远程检查', '运行中', '2018-1-12'), createData('测试任务-2', '已暂停', '2018-1-12'), createData('测试任务-10', '已完成', '2018-1-12'), createData('任务-1', '已完成', '2018-1-12'), createData('检测本地资产', '已完成', '2018-1-12'), createData('远程检查', '运行中', '2018-1-12'), createData('测试任务-2', '已暂停', '2018-1-12'), createData('测试任务-10', '已完成', '2018-1-12'), createData('任务-1', '已完成', '2018-1-12'), createData('检测本地资产', '已完成', '2018-1-12'), createData('远程检查', '运行中', '2018-1-12'), createData('测试任务-2', '已暂停', '2018-1-12'), createData('测试任务-10', '已完成', '2018-1-12')].sort(function (a, b) {\n        return a.calories < b.calories ? -1 : 1;\n      }),\n      page: 0,\n      rowsPerPage: 5\n    };\n\n    _this2.handleChangePage = function (event, page) {\n      _this2.setState({\n        page: page\n      });\n    };\n\n    _this2.handleChangeRowsPerPage = function (event) {\n      _this2.setState({\n        page: 0,\n        rowsPerPage: event.target.value\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(TaskTable, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          rows = _this$state.rows,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      var emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n      return React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.tableWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"\\u5E8F\\u53F7\"), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"\\u4EFB\\u52A1\\u540D\\u79F0\"), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"\\u8FD0\\u884C\\u72B6\\u6001\"), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"\\u4FEE\\u6539\\u65F6\\u95F4\"), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"\\u67E5\\u770B\\u4EFB\\u52A1\\u7ED3\\u679C\"), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"\\u64CD\\u4F5C\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row) {\n        return React.createElement(TableRow, {\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          width: \"150px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, row.id), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, row.name), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, row.runStatus), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, row.changeTime), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, '待实现'), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, '待实现'));\n      }), emptyRows > 0 && React.createElement(TableRow, {\n        style: {\n          height: 48 * emptyRows\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))), React.createElement(TableFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        colSpan: 3,\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        SelectProps: {\n          native: true\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        ActionsComponent: TablePaginationActionsWrapped,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return TaskTable;\n}(React.Component);\n\nTaskTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TaskTable);","map":{"version":3,"sources":["E:\\Develop\\React Projects\\system-config-inspect\\src\\pages\\task-manage\\TaskTable.js"],"names":["React","PropTypes","withStyles","Table","TableHead","TableBody","TableCell","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","actionsStyles","theme","root","flexShrink","color","palette","text","secondary","marginLeft","spacing","unit","TablePaginationActions","handleFirstPageButtonClick","event","props","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","classes","direction","Component","propTypes","object","isRequired","number","func","TablePaginationActionsWrapped","withTheme","counter","createData","name","runStatus","changeTime","id","styles","width","marginTop","table","minWidth","tableWrapper","overflowX","TaskTable","state","rows","sort","a","b","calories","handleChangePage","setState","handleChangeRowsPerPage","target","value","emptyRows","min","length","slice","map","row","height","native"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst actionsStyles = theme => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        color: theme.palette.text.secondary,\r\n        marginLeft: theme.spacing.unit * 2.5,\r\n    },\r\n});\r\n\r\nclass TablePaginationActions extends React.Component {\r\n    handleFirstPageButtonClick = event => {\r\n        this.props.onChangePage(event, 0);\r\n    };\r\n\r\n    handleBackButtonClick = event => {\r\n        this.props.onChangePage(event, this.props.page - 1);\r\n    };\r\n\r\n    handleNextButtonClick = event => {\r\n        this.props.onChangePage(event, this.props.page + 1);\r\n    };\r\n\r\n    handleLastPageButtonClick = event => {\r\n        this.props.onChangePage(\r\n            event,\r\n            Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { classes, count, page, rowsPerPage, theme } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <IconButton\r\n                    onClick={this.handleFirstPageButtonClick}\r\n                    disabled={page === 0}\r\n                    aria-label=\"First Page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={this.handleBackButtonClick}\r\n                    disabled={page === 0}\r\n                    aria-label=\"Previous Page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={this.handleNextButtonClick}\r\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                    aria-label=\"Next Page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={this.handleLastPageButtonClick}\r\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                    aria-label=\"Last Page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\r\n    TablePaginationActions,\r\n);\r\n\r\nlet counter = 0;\r\nfunction createData(name, runStatus, changeTime) {\r\n    counter += 1;\r\n    return { id: counter, name, runStatus, changeTime };\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    table: {\r\n        minWidth: 500,\r\n    },\r\n    tableWrapper: {\r\n        overflowX: 'auto',\r\n    },\r\n});\r\n\r\nclass TaskTable extends React.Component {\r\n    state = {\r\n        rows: [\r\n            createData('任务-1', '已完成', '2018-1-12'),\r\n            createData('检测本地资产', '已完成', '2018-1-12'),\r\n            createData('远程检查', '运行中', '2018-1-12'),\r\n            createData('测试任务-2', '已暂停', '2018-1-12'),\r\n            createData('测试任务-10', '已完成', '2018-1-12'),\r\n            createData('任务-1', '已完成', '2018-1-12'),\r\n            createData('检测本地资产', '已完成', '2018-1-12'),\r\n            createData('远程检查', '运行中', '2018-1-12'),\r\n            createData('测试任务-2', '已暂停', '2018-1-12'),\r\n            createData('测试任务-10', '已完成', '2018-1-12'),\r\n            createData('任务-1', '已完成', '2018-1-12'),\r\n            createData('检测本地资产', '已完成', '2018-1-12'),\r\n            createData('远程检查', '运行中', '2018-1-12'),\r\n            createData('测试任务-2', '已暂停', '2018-1-12'),\r\n            createData('测试任务-10', '已完成', '2018-1-12'),\r\n            createData('任务-1', '已完成', '2018-1-12'),\r\n            createData('检测本地资产', '已完成', '2018-1-12'),\r\n            createData('远程检查', '运行中', '2018-1-12'),\r\n            createData('测试任务-2', '已暂停', '2018-1-12'),\r\n            createData('测试任务-10', '已完成', '2018-1-12'),\r\n        ].sort((a, b) => (a.calories < b.calories ? -1 : 1)),\r\n        page: 0,\r\n        rowsPerPage: 5,\r\n    };\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.setState({ page });\r\n    };\r\n\r\n    handleChangeRowsPerPage = event => {\r\n        this.setState({ page: 0, rowsPerPage: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { rows, rowsPerPage, page } = this.state;\r\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <div className={classes.tableWrapper}>\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>序号</TableCell>\r\n                                <TableCell align=\"center\">任务名称</TableCell>\r\n                                <TableCell align=\"center\">运行状态</TableCell>\r\n                                <TableCell align=\"center\">修改时间</TableCell>\r\n                                <TableCell align=\"center\">查看任务结果</TableCell>\r\n                                <TableCell align=\"center\">操作</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\"  width='150px'>\r\n                                        {row.id}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{row.name}</TableCell>\r\n                                    <TableCell align=\"center\">{row.runStatus}</TableCell>\r\n                                    <TableCell align=\"center\">{row.changeTime}</TableCell>\r\n                                    <TableCell align=\"center\">{'待实现'}</TableCell>\r\n                                    <TableCell align=\"center\">{'待实现'}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: 48 * emptyRows }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                        <TableFooter>\r\n                            <TableRow>\r\n                                <TablePagination\r\n                                    rowsPerPageOptions={[5, 10, 25]}\r\n                                    colSpan={3}\r\n                                    count={rows.length}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    SelectProps={{\r\n                                        native: true,\r\n                                    }}\r\n                                    onChangePage={this.handleChangePage}\r\n                                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                                    ActionsComponent={TablePaginationActionsWrapped}\r\n                                />\r\n                            </TableRow>\r\n                        </TableFooter>\r\n                    </Table>\r\n                </div>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nTaskTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TaskTable);\r\n"]},"metadata":{},"sourceType":"module"}