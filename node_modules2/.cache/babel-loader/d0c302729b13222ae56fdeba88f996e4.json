{"ast":null,"code":"var _jsxFileName = \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\src\\\\pages\\\\inspect-result\\\\echarts\\\\RiskTypeBar.js\";\nimport React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nvar LineMarkerEcharts = React.createClass({\n  displayName: \"LineMarkerEcharts\",\n  propTypes: {},\n  getOption: function getOption() {\n    var option = {// title: {\n      //     text: '未来一周气温变化',\n      //     subtext: '纯属虚构'\n      // },\n      // tooltip: {\n      //     trigger: 'axis'\n      // },\n      // legend: {\n      //     data: ['最高气温', '最低气温']\n      // },\n      // toolbox: {\n      //     show: true,\n      //     feature: {\n      //         dataZoom: {\n      //             yAxisIndex: 'none'\n      //         },\n      //         dataView: { readOnly: false },\n      //         magicType: { type: ['line', 'bar'] },\n      //         restore: {},\n      //         saveAsImage: {}\n      //     }\n      // },\n      // xAxis: {\n      //     type: 'category',\n      //     boundaryGap: false,\n      //     data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n      // },\n      // yAxis: {\n      //     type: 'value',\n      //     axisLabel: {\n      //         formatter: '{value} °C'\n      //     }\n      // },\n      // series: [\n      //     {\n      //         name: '最高气温',\n      //         type: 'line',\n      //         data: [11, 11, 15, 13, 12, 13, 10],\n      //         markPoint: {\n      //             data: [\n      //                 { type: 'max', name: '最大值' },\n      //                 { type: 'min', name: '最小值' }\n      //             ]\n      //         },\n      //         markLine: {\n      //             data: [\n      //                 { type: 'average', name: '平均值' }\n      //             ]\n      //         }\n      //     },\n      //     {\n      //         name: '最低气温',\n      //         type: 'line',\n      //         data: [1, -2, 2, 5, 3, 2, 0],\n      //         markPoint: {\n      //             data: [\n      //                 { name: '周最低', value: -2, xAxis: 1, yAxis: -1.5 }\n      //             ]\n      //         },\n      //         markLine: {\n      //             data: [\n      //                 { type: 'average', name: '平均值' },\n      //                 [{\n      //                     symbol: 'none',\n      //                     x: '90%',\n      //                     yAxis: 'max'\n      //                 }, {\n      //                     symbol: 'circle',\n      //                     label: {\n      //                         normal: {\n      //                             position: 'start',\n      //                             formatter: '最大值'\n      //                         }\n      //                     },\n      //                     type: 'max',\n      //                     name: '最高点'\n      //                 }]\n      //             ]\n      //         }\n      //     }\n      // ]\n    };\n    return option;\n  },\n  render: function render() {\n    var code = \"<ReactEcharts \" + \"    option={this.getOption()} \" + \"    style={{height: '350px', width: '1000px'}}  \" + \"    className='react_for_echarts' />\";\n    return React.createElement(ReactEcharts, {\n      option: this.getOption(),\n      style: {\n        height: '350px',\n        width: '1000px'\n      },\n      className: \"react_for_echarts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    });\n  }\n});\nexport default LineMarkerEcharts;","map":{"version":3,"sources":["E:\\Develop\\React Projects\\system-config-inspect\\src\\pages\\inspect-result\\echarts\\RiskTypeBar.js"],"names":["React","ReactEcharts","LineMarkerEcharts","createClass","propTypes","getOption","option","render","code","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,IAAMC,iBAAiB,GAAGF,KAAK,CAACG,WAAN,CAAkB;AAAA;AACxCC,EAAAA,SAAS,EAAE,EAD6B;AAGxCC,EAAAA,SAAS,EAAE,qBAAY;AACnB,QAAMC,MAAM,GAAG,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjFW,KAAf;AAmFA,WAAOA,MAAP;AACH,GAxFuC;AAyFxCC,EAAAA,MAAM,EAAE,kBAAY;AAChB,QAAIC,IAAI,GAAG,mBACP,gCADO,GAEP,kDAFO,GAGP,sCAHJ;AAIA,WACI,oBAAC,YAAD;AACI,MAAA,MAAM,EAAE,KAAKH,SAAL,EADZ;AAEI,MAAA,KAAK,EAAE;AAAEI,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAFX;AAGI,MAAA,SAAS,EAAC,mBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;AApGuC,CAAlB,CAA1B;AAuGA,eAAeR,iBAAf","sourcesContent":["import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst LineMarkerEcharts = React.createClass({\r\n    propTypes: {\r\n    },\r\n    getOption: function () {\r\n        const option = {\r\n            // title: {\r\n            //     text: '未来一周气温变化',\r\n            //     subtext: '纯属虚构'\r\n            // },\r\n            // tooltip: {\r\n            //     trigger: 'axis'\r\n            // },\r\n            // legend: {\r\n            //     data: ['最高气温', '最低气温']\r\n            // },\r\n            // toolbox: {\r\n            //     show: true,\r\n            //     feature: {\r\n            //         dataZoom: {\r\n            //             yAxisIndex: 'none'\r\n            //         },\r\n            //         dataView: { readOnly: false },\r\n            //         magicType: { type: ['line', 'bar'] },\r\n            //         restore: {},\r\n            //         saveAsImage: {}\r\n            //     }\r\n            // },\r\n            // xAxis: {\r\n            //     type: 'category',\r\n            //     boundaryGap: false,\r\n            //     data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n            // },\r\n            // yAxis: {\r\n            //     type: 'value',\r\n            //     axisLabel: {\r\n            //         formatter: '{value} °C'\r\n            //     }\r\n            // },\r\n            // series: [\r\n            //     {\r\n            //         name: '最高气温',\r\n            //         type: 'line',\r\n            //         data: [11, 11, 15, 13, 12, 13, 10],\r\n            //         markPoint: {\r\n            //             data: [\r\n            //                 { type: 'max', name: '最大值' },\r\n            //                 { type: 'min', name: '最小值' }\r\n            //             ]\r\n            //         },\r\n            //         markLine: {\r\n            //             data: [\r\n            //                 { type: 'average', name: '平均值' }\r\n            //             ]\r\n            //         }\r\n            //     },\r\n            //     {\r\n            //         name: '最低气温',\r\n            //         type: 'line',\r\n            //         data: [1, -2, 2, 5, 3, 2, 0],\r\n            //         markPoint: {\r\n            //             data: [\r\n            //                 { name: '周最低', value: -2, xAxis: 1, yAxis: -1.5 }\r\n            //             ]\r\n            //         },\r\n            //         markLine: {\r\n            //             data: [\r\n            //                 { type: 'average', name: '平均值' },\r\n            //                 [{\r\n            //                     symbol: 'none',\r\n            //                     x: '90%',\r\n            //                     yAxis: 'max'\r\n            //                 }, {\r\n            //                     symbol: 'circle',\r\n            //                     label: {\r\n            //                         normal: {\r\n            //                             position: 'start',\r\n            //                             formatter: '最大值'\r\n            //                         }\r\n            //                     },\r\n            //                     type: 'max',\r\n            //                     name: '最高点'\r\n            //                 }]\r\n            //             ]\r\n            //         }\r\n            //     }\r\n            // ]\r\n        };\r\n        return option;\r\n    },\r\n    render: function () {\r\n        let code = \"<ReactEcharts \" +\r\n            \"    option={this.getOption()} \" +\r\n            \"    style={{height: '350px', width: '1000px'}}  \" +\r\n            \"    className='react_for_echarts' />\";\r\n        return (\r\n            <ReactEcharts\r\n                option={this.getOption()}\r\n                style={{ height: '350px', width: '1000px' }}\r\n                className='react_for_echarts' />\r\n        );\r\n    }\r\n});\r\n\r\nexport default LineMarkerEcharts;\r\n\r\n"]},"metadata":{},"sourceType":"module"}