{"ast":null,"code":"import _objectWithoutProperties from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\src\\\\utils\\\\private-route.js\";\nimport React from 'react';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { UserIsAuthenticated } from './session'; // https://www.cnblogs.com/kdcg/p/9309600.html\n// 查阅以上页面，修改全局路由登陆拦截\n//私有路由，只有登录的用户才能访问\n\nvar PrivateRoute =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PrivateRoute, _React$Component);\n\n  function PrivateRoute() {\n    _classCallCheck(this, PrivateRoute);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PrivateRoute).apply(this, arguments));\n  }\n\n  _createClass(PrivateRoute, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var isAuthenticated = UserIsAuthenticated();\n      this.setState({\n        isAuthenticated: isAuthenticated\n      });\n\n      if (!isAuthenticated) {\n        var history = this.props.history;\n        setTimeout(function () {\n          history.replace(\"/login\");\n        }, 1000);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          Component = _this$props.component,\n          _this$props$path = _this$props.path,\n          path = _this$props$path === void 0 ? \"/\" : _this$props$path,\n          _this$props$exact = _this$props.exact,\n          exact = _this$props$exact === void 0 ? false : _this$props$exact,\n          _this$props$strict = _this$props.strict,\n          strict = _this$props$strict === void 0 ? false : _this$props$strict,\n          rest = _objectWithoutProperties(_this$props, [\"component\", \"path\", \"exact\", \"strict\"]);\n\n      return React.createElement(Route, Object.assign({}, rest, {\n        render: function render(props) {\n          var postId = props.match.params.postId;\n          return _this.state.isAuthenticated ? React.createElement(Component, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          })) : React.createElement(Redirect, {\n            to: {\n              pathname: \"/login\",\n              state: {\n                from: props.location\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })); // return this.state.isAuthenticated ?  (\n      //     <Route  path={path} exact={exact}  strict={strict}  render={(props)=>( <Component {...props} /> )} />\n      // ) : (\"请重新登录\");\n    }\n  }]);\n\n  return PrivateRoute;\n}(React.Component);\n\nPrivateRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  exact: PropTypes.bool,\n  strict: PropTypes.bool,\n  component: PropTypes.func.isRequired\n};\nexport default withRouter(PrivateRoute); // import React from 'react'\n// import { Route, Redirect, } from 'react-router-dom'\n// import { UserIsAuthenticated } from './session'\n// const PrivateRoute = ({ component: Component, ...rest }) => (\n//   <Route {...rest} render={(props) => (\n//     !!UserIsAuthenticated()\n//       ? <Component {...props} />\n//       : <Redirect to={{\n//         pathname: '/login',\n//         state: { from: props.location }\n//       }} />\n//   )} />\n// )\n// export default PrivateRoute","map":{"version":3,"sources":["E:\\Develop\\React Projects\\system-config-inspect\\src\\utils\\private-route.js"],"names":["React","Route","Redirect","withRouter","PropTypes","UserIsAuthenticated","PrivateRoute","isAuthenticated","setState","history","props","setTimeout","replace","Component","component","path","exact","strict","rest","postId","match","params","state","pathname","from","location","propTypes","string","isRequired","bool","func"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,QAAd,EAAuBC,UAAvB,QAAwC,kBAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,mBAAT,QAAoC,WAApC,C,CAEA;AACA;AAEA;;IACMC,Y;;;;;;;;;;;;;yCACkB;AAChB,UAAKC,eAAe,GAAGF,mBAAmB,EAA1C;AACA,WAAKG,QAAL,CAAc;AAACD,QAAAA,eAAe,EAACA;AAAjB,OAAd;;AACA,UAAG,CAACA,eAAJ,EAAoB;AAAA,YACXE,OADW,GACA,KAAKC,KADL,CACXD,OADW;AAElBE,QAAAA,UAAU,CAAC,YAAM;AACfF,UAAAA,OAAO,CAACG,OAAR,CAAgB,QAAhB;AACD,SAFS,EAEP,IAFO,CAAV;AAGD;AACJ;;;6BACO;AAAA;;AAAA,wBACqE,KAAKF,KAD1E;AAAA,UACaG,SADb,eACEC,SADF;AAAA,yCACuBC,IADvB;AAAA,UACuBA,IADvB,iCAC4B,GAD5B;AAAA,0CACgCC,KADhC;AAAA,UACgCA,KADhC,kCACsC,KADtC;AAAA,2CAC4CC,MAD5C;AAAA,UAC4CA,MAD5C,mCACmD,KADnD;AAAA,UAC6DC,IAD7D;;AAEJ,aACE,oBAAC,KAAD,oBACIA,IADJ;AAEA,QAAA,MAAM,EAAE,gBAAAR,KAAK,EAAI;AACf,cAAMS,MAAM,GAAGT,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBF,MAAlC;AACA,iBAAO,KAAI,CAACG,KAAL,CAAWf,eAAX,GACL,oBAAC,SAAD,oBAAeG,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADK,GAGL,oBAAC,QAAD;AACE,YAAA,EAAE,EAAE;AACFa,cAAAA,QAAQ,EAAE,QADR;AAEFD,cAAAA,KAAK,EAAE;AAAEE,gBAAAA,IAAI,EAAEd,KAAK,CAACe;AAAd;AAFL,aADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAUD,SAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAFI,CAqBJ;AACA;AACA;AACH;;;;EAnCsBzB,KAAK,CAACa,S;;AAqCjCP,YAAY,CAACoB,SAAb,GAAyB;AACjBX,EAAAA,IAAI,EAACX,SAAS,CAACuB,MAAV,CAAiBC,UADL;AAEjBZ,EAAAA,KAAK,EAACZ,SAAS,CAACyB,IAFC;AAGjBZ,EAAAA,MAAM,EAACb,SAAS,CAACyB,IAHA;AAIjBf,EAAAA,SAAS,EAACV,SAAS,CAAC0B,IAAV,CAAeF;AAJR,CAAzB;AAMA,eAAezB,UAAU,CAACG,YAAD,CAAzB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\r\nimport {Route,Redirect,withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserIsAuthenticated } from './session'\r\n\r\n// https://www.cnblogs.com/kdcg/p/9309600.html\r\n// 查阅以上页面，修改全局路由登陆拦截\r\n\r\n//私有路由，只有登录的用户才能访问\r\nclass PrivateRoute extends React.Component{\r\n    componentWillMount(){\r\n        let  isAuthenticated = UserIsAuthenticated();\r\n        this.setState({isAuthenticated:isAuthenticated})\r\n        if(!isAuthenticated){\r\n          const {history} = this.props;\r\n          setTimeout(() => {\r\n            history.replace(\"/login\");\r\n          }, 1000)\r\n        }\r\n    }\r\n    render(){\r\n        let { component: Component,path=\"/\",exact=false,strict=false, ...rest} = this.props;\r\n        return (\r\n          <Route\r\n          {...rest}\r\n          render={props => {\r\n            const postId = props.match.params.postId;\r\n            return this.state.isAuthenticated ? (\r\n              <Component {...props} />\r\n            ) : (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/login\",\r\n                  state: { from: props.location }\r\n                }}\r\n              />\r\n            )\r\n          }}\r\n        />\r\n      \r\n        );\r\n        // return this.state.isAuthenticated ?  (\r\n        //     <Route  path={path} exact={exact}  strict={strict}  render={(props)=>( <Component {...props} /> )} />\r\n        // ) : (\"请重新登录\");\r\n    }\r\n}\r\nPrivateRoute.propTypes  ={\r\n        path:PropTypes.string.isRequired,\r\n        exact:PropTypes.bool,\r\n        strict:PropTypes.bool,\r\n        component:PropTypes.func.isRequired\r\n}\r\nexport default withRouter(PrivateRoute);\r\n\r\n// import React from 'react'\r\n// import { Route, Redirect, } from 'react-router-dom'\r\n// import { UserIsAuthenticated } from './session'\r\n\r\n// const PrivateRoute = ({ component: Component, ...rest }) => (\r\n//   <Route {...rest} render={(props) => (\r\n//     !!UserIsAuthenticated()\r\n//       ? <Component {...props} />\r\n//       : <Redirect to={{\r\n//         pathname: '/login',\r\n//         state: { from: props.location }\r\n//       }} />\r\n//   )} />\r\n// )\r\n\r\n// export default PrivateRoute"]},"metadata":{},"sourceType":"module"}