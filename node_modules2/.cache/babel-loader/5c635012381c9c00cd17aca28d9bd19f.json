{"ast":null,"code":"import _classCallCheck from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\src\\\\pages\\\\task-manage\\\\NewTaskDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '90%'\n    },\n    button: {\n      marginTop: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing.unit * 2\n    },\n    resetContainer: {\n      padding: theme.spacing.unit * 3\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing.unit\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200\n    }\n  };\n}; // function getSteps() {\n//   return ['基本信息', '资产识别', '规则配置'];\n// }\n// function getStepContent(step) {\n//   // const { classes } = this.props;\n//   switch (step) {\n//     case 0:\n//       return (\n//         <div>\n//           <form>\n//             <TextField\n//               required\n//               id=\"task-name\"\n//               label=\"任务名称\"\n//               defaultValue=\"新建任务-1\"\n//               className={classes.textField}\n//               margin=\"normal\"\n//             />\n//             <FormControl margin=\"normal\" required fullWidth>\n//               <InputLabel>任务名称</InputLabel>\n//               <Input id=\"task-name\" name=\"task-name\" autoFocus />\n//             </FormControl>\n//             <FormControl margin=\"normal\" required fullWidth>\n//               <InputLabel>任务描述</InputLabel>\n//               <Input id=\"task-desc\" name=\"task-desc\" />\n//             </FormControl>\n//             {/* <FormControl margin=\"normal\" required fullWidth>\n//               <InputLabel htmlFor=\"password\">密码</InputLabel>\n//               <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\n//             </FormControl> */}\n//           </form>\n//           {/* <form className={classes.form}>\n//             <FormControl margin=\"normal\" required fullWidth>\n//               <InputLabel htmlFor=\"email\">用户名</InputLabel>\n//               <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus  />\n//             </FormControl>\n//             <FormControl margin=\"normal\" required fullWidth>\n//               <InputLabel htmlFor=\"password\">密码</InputLabel>\n//               <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\n//             </FormControl>\n//           </form> */}\n//         </div>\n//       );\n//     case 1:\n//       return 'An ad group contains one or more ads which target a shared set of keywords.';\n//     case 2:\n//       return `Try out different ad text to see what brings in the most customers,\n//               and learn how to enhance your ads using features like ad extensions.\n//               If you run into any problems with your ads, find out how to tell if\n//               they're running and how to resolve approval issues.`;\n//     default:\n//       return 'Unknown step';\n//   }\n// }\n\n\nvar NewTaskDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewTaskDialog, _React$Component);\n\n  function NewTaskDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewTaskDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewTaskDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeStep: 0,\n      taskName: '新建任务-1',\n      taskDesc: ''\n    };\n\n    _this.getSteps = function () {\n      return ['基本信息', '资产识别', '规则配置'];\n    };\n\n    _this.getStepContent = function (step) {\n      var classes = _this.props.classes;\n      var _this$state = _this.state,\n          taskName = _this$state.taskName,\n          taskDesc = _this$state.taskDesc;\n\n      switch (step) {\n        case 0:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, React.createElement(\"form\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, React.createElement(TextField, {\n            required: true,\n            fullWidth: true,\n            autoFocus: true,\n            style: {\n              margin: 8\n            },\n            margin: \"normal\",\n            id: \"task-name\",\n            label: \"\\u4EFB\\u52A1\\u540D\\u79F0\",\n            defaultValue: taskName,\n            variant: \"outlined\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }), React.createElement(TextField, {\n            fullWidth: true,\n            style: {\n              margin: 8\n            },\n            margin: \"normal\",\n            multiline: true,\n            id: \"task-desc\",\n            label: \"\\u4EFB\\u52A1\\u63CF\\u8FF0\",\n            defaultValue: taskDesc,\n            variant: \"outlined\",\n            rows: \"4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          })));\n\n        case 1:\n          return 'An ad group contains one or more ads which target a shared set of keywords.';\n\n        case 2:\n          return \"Try out different ad text to see what brings in the most customers,\\n                and learn how to enhance your ads using features like ad extensions.\\n                If you run into any problems with your ads, find out how to tell if\\n                they're running and how to resolve approval issues.\";\n\n        default:\n          return 'Unknown step';\n      }\n    };\n\n    _this.handleNext = function () {\n      _this.setState(function (state) {\n        return {\n          activeStep: state.activeStep + 1\n        };\n      });\n    };\n\n    _this.handleBack = function () {\n      _this.setState(function (state) {\n        return {\n          activeStep: state.activeStep - 1\n        };\n      });\n    };\n\n    _this.handleReset = function () {\n      _this.setState({\n        activeStep: 0\n      });\n    };\n\n    _this.handleTaskNameChange = function (event) {\n      _this.setState(function (state) {\n        return {\n          taskName: event.target.value\n        };\n      });\n    };\n\n    _this.handleTaskDescChange = function (event) {\n      _this.setState(function (state) {\n        return {\n          taskDesc: event.target.value\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewTaskDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var steps = this.getSteps();\n      var activeStep = this.state.activeStep;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        activeStep: activeStep,\n        orientation: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, steps.map(function (label, index) {\n        return React.createElement(Step, {\n          key: label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(StepLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, label), React.createElement(StepContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, _this2.getStepContent(index)), React.createElement(\"div\", {\n          className: classes.actionsContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(Button, {\n          disabled: activeStep === 0,\n          onClick: _this2.handleBack,\n          className: classes.button,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"\\u4E0A\\u4E00\\u6B65\"), React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: _this2.handleNext,\n          className: classes.button,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, activeStep === steps.length - 1 ? '完成' : '下一步')))));\n      })), activeStep === steps.length && React.createElement(Paper, {\n        square: true,\n        elevation: 0,\n        className: classes.resetContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"All steps completed - you're finished\"), React.createElement(Button, {\n        onClick: this.handleReset,\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Reset\")));\n    }\n  }]);\n\n  return NewTaskDialog;\n}(React.Component);\n\nNewTaskDialog.propTypes = {\n  classes: PropTypes.object\n};\nexport default withStyles(styles)(NewTaskDialog);","map":{"version":3,"sources":["E:\\Develop\\React Projects\\system-config-inspect\\src\\pages\\task-manage\\NewTaskDialog.js"],"names":["React","PropTypes","withStyles","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","FormControl","FormControlLabel","Input","InputLabel","TextField","styles","theme","root","width","button","marginTop","spacing","unit","marginRight","actionsContainer","marginBottom","resetContainer","padding","form","textField","marginLeft","NewTaskDialog","state","activeStep","taskName","taskDesc","getSteps","getStepContent","step","classes","props","margin","handleNext","setState","handleBack","handleReset","handleTaskNameChange","event","target","value","handleTaskDescChange","steps","map","label","index","length","Component","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing.unit * 3,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 200,\r\n  },\r\n\r\n});\r\n\r\n// function getSteps() {\r\n//   return ['基本信息', '资产识别', '规则配置'];\r\n// }\r\n\r\n// function getStepContent(step) {\r\n//   // const { classes } = this.props;\r\n//   switch (step) {\r\n//     case 0:\r\n//       return (\r\n//         <div>\r\n//           <form>\r\n//             <TextField\r\n//               required\r\n//               id=\"task-name\"\r\n//               label=\"任务名称\"\r\n//               defaultValue=\"新建任务-1\"\r\n//               className={classes.textField}\r\n//               margin=\"normal\"\r\n//             />\r\n//             <FormControl margin=\"normal\" required fullWidth>\r\n//               <InputLabel>任务名称</InputLabel>\r\n//               <Input id=\"task-name\" name=\"task-name\" autoFocus />\r\n//             </FormControl>\r\n//             <FormControl margin=\"normal\" required fullWidth>\r\n//               <InputLabel>任务描述</InputLabel>\r\n//               <Input id=\"task-desc\" name=\"task-desc\" />\r\n//             </FormControl>\r\n//             {/* <FormControl margin=\"normal\" required fullWidth>\r\n//               <InputLabel htmlFor=\"password\">密码</InputLabel>\r\n//               <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\r\n//             </FormControl> */}\r\n//           </form>\r\n//           {/* <form className={classes.form}>\r\n//             <FormControl margin=\"normal\" required fullWidth>\r\n//               <InputLabel htmlFor=\"email\">用户名</InputLabel>\r\n//               <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus  />\r\n//             </FormControl>\r\n//             <FormControl margin=\"normal\" required fullWidth>\r\n//               <InputLabel htmlFor=\"password\">密码</InputLabel>\r\n//               <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\r\n//             </FormControl>\r\n//           </form> */}\r\n\r\n//         </div>\r\n//       );\r\n//     case 1:\r\n//       return 'An ad group contains one or more ads which target a shared set of keywords.';\r\n//     case 2:\r\n//       return `Try out different ad text to see what brings in the most customers,\r\n//               and learn how to enhance your ads using features like ad extensions.\r\n//               If you run into any problems with your ads, find out how to tell if\r\n//               they're running and how to resolve approval issues.`;\r\n//     default:\r\n//       return 'Unknown step';\r\n//   }\r\n// }\r\n\r\nclass NewTaskDialog extends React.Component {\r\n  state = {\r\n    activeStep: 0,\r\n    taskName: '新建任务-1',\r\n    taskDesc: '',\r\n  };\r\n\r\n  getSteps = () => {\r\n    return ['基本信息', '资产识别', '规则配置'];\r\n  };\r\n\r\n  getStepContent = (step) => {\r\n    const { classes } = this.props;\r\n    const { taskName, taskDesc } = this.state;\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div>\r\n            <form>\r\n              <TextField required fullWidth autoFocus style={{ margin: 8 }} margin=\"normal\" \r\n                id=\"task-name\" label=\"任务名称\" defaultValue={taskName} variant=\"outlined\"\r\n              />\r\n              <TextField fullWidth style={{ margin: 8 }} margin=\"normal\" multiline\r\n                id=\"task-desc\" label=\"任务描述\" defaultValue={taskDesc} variant=\"outlined\" rows=\"4\" \r\n              />\r\n            </form>\r\n          </div>\r\n        );\r\n      case 1:\r\n        return 'An ad group contains one or more ads which target a shared set of keywords.';\r\n      case 2:\r\n        return `Try out different ad text to see what brings in the most customers,\r\n                and learn how to enhance your ads using features like ad extensions.\r\n                If you run into any problems with your ads, find out how to tell if\r\n                they're running and how to resolve approval issues.`;\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n  };\r\n\r\n  handleNext = () => {\r\n    this.setState(state => ({\r\n      activeStep: state.activeStep + 1,\r\n    }));\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.setState(state => ({\r\n      activeStep: state.activeStep - 1,\r\n    }));\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      activeStep: 0,\r\n    });\r\n  };\r\n\r\n  handleTaskNameChange = (event) => {\r\n    this.setState(state => ({\r\n      taskName: event.target.value,\r\n    }));\r\n  };\r\n\r\n  handleTaskDescChange = (event) => {\r\n    this.setState(state => ({\r\n      taskDesc: event.target.value,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const steps = this.getSteps();\r\n    const { activeStep } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n          {steps.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n              <StepContent>\r\n                <Typography>{this.getStepContent(index)}</Typography>\r\n                <div className={classes.actionsContainer}>\r\n                  <div>\r\n                    <Button\r\n                      disabled={activeStep === 0}\r\n                      onClick={this.handleBack}\r\n                      className={classes.button}\r\n                    >\r\n                      上一步\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={this.handleNext}\r\n                      className={classes.button}\r\n                    >\r\n                      {activeStep === steps.length - 1 ? '完成' : '下一步'}\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </StepContent>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        {activeStep === steps.length && (\r\n          <Paper square elevation={0} className={classes.resetContainer}>\r\n            <Typography>All steps completed - you&apos;re finished</Typography>\r\n            <Button onClick={this.handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </Paper>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNewTaskDialog.propTypes = {\r\n  classes: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles)(NewTaskDialog);\r\n"]},"metadata":{},"sourceType":"module"}