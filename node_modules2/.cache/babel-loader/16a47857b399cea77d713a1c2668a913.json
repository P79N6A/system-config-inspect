{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _core = require(\"@material-ui/core\");\n\nvar _colorManipulator = require(\"@material-ui/core/styles/colorManipulator\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _filefy = require(\"filefy\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n/* eslint-disable no-unused-vars */\n\n/* eslint-enable no-unused-vars */\n\n\nvar MTableToolbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(MTableToolbar, _React$Component);\n\n  function MTableToolbar(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, MTableToolbar);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MTableToolbar).call(this, props));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"exportCsv\", function () {\n      var columns = _this.props.columns.filter(function (columnDef) {\n        return !columnDef.hidden && columnDef.field;\n      });\n\n      var data = _this.props.renderData.map(function (rowData) {\n        return columns.map(function (columnDef) {\n          return rowData[columnDef.field];\n        });\n      }); // eslint-disable-next-line no-unused-vars\n\n\n      var builder = new _filefy.CsvBuilder((_this.props.exportFileName || _this.props.title || 'data') + '.csv').setDelimeter(_this.props.exportDelimiter).setColumns(columns.map(function (columnDef) {\n        return columnDef.title;\n      })).addRows(data).exportFile();\n\n      _this.setState({\n        exportButtonAnchorEl: null\n      });\n    });\n    _this.state = {\n      columnsButtonAnchorEl: null,\n      exportButtonAnchorEl: null\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(MTableToolbar, [{\n    key: \"renderSearch\",\n    value: function renderSearch() {\n      var _this2 = this;\n\n      var localization = (0, _objectSpread2.default)({}, MTableToolbar.defaultProps.localization, this.props.localization);\n\n      if (this.props.search) {\n        return React.createElement(_core.TextField, {\n          className: this.props.classes.searchField,\n          value: this.props.searchText,\n          onChange: function onChange(event) {\n            return _this2.props.onSearchChanged(event.target.value);\n          },\n          color: \"inherit\",\n          InputProps: {\n            startAdornment: React.createElement(_core.InputAdornment, {\n              position: \"start\"\n            }, React.createElement(_core.Tooltip, {\n              title: localization.searchTooltip\n            }, React.createElement(this.props.icons.Search, {\n              color: \"inherit\"\n            }))),\n            style: this.props.searchFieldStyle\n          }\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderDefaultActions\",\n    value: function renderDefaultActions() {\n      var _this3 = this;\n\n      var localization = (0, _objectSpread2.default)({}, MTableToolbar.defaultProps.localization, this.props.localization);\n      return React.createElement(\"div\", null, this.renderSearch(), this.props.columnsButton && React.createElement(\"span\", null, React.createElement(_core.Tooltip, {\n        title: localization.showColumnsTitle\n      }, React.createElement(_core.IconButton, {\n        color: \"inherit\",\n        onClick: function onClick(event) {\n          return _this3.setState({\n            columnsButtonAnchorEl: event.currentTarget\n          });\n        },\n        \"aria-label\": localization.showColumnsAriaLabel\n      }, React.createElement(this.props.icons.ViewColumn, null))), React.createElement(_core.Menu, {\n        anchorEl: this.state.columnsButtonAnchorEl,\n        open: Boolean(this.state.columnsButtonAnchorEl),\n        onClose: function onClose() {\n          return _this3.setState({\n            columnsButtonAnchorEl: null\n          });\n        }\n      }, React.createElement(_core.MenuItem, {\n        key: \"text\",\n        disabled: true,\n        style: {\n          opacity: 1,\n          fontWeight: 600,\n          fontSize: 12\n        }\n      }, localization.addRemoveColumns), this.props.columns.map(function (col, index) {\n        return React.createElement(_core.MenuItem, {\n          key: col.tableData.id,\n          disabled: col.removable === false\n        }, React.createElement(_core.FormControlLabel, {\n          label: col.title,\n          control: React.createElement(_core.Checkbox, {\n            checked: !col.hidden,\n            onChange: function onChange(event, checked) {\n              var columns = _this3.props.columns;\n              columns[index].hidden = !checked;\n\n              _this3.props.onColumnsChanged(columns);\n            }\n          })\n        }));\n      }))), this.props.exportButton && React.createElement(\"span\", null, React.createElement(_core.Tooltip, {\n        title: localization.exportTitle\n      }, React.createElement(_core.IconButton, {\n        color: \"inherit\",\n        onClick: function onClick(event) {\n          return _this3.setState({\n            exportButtonAnchorEl: event.currentTarget\n          });\n        },\n        \"aria-label\": localization.exportAriaLabel\n      }, React.createElement(this.props.icons.Export, null))), React.createElement(_core.Menu, {\n        anchorEl: this.state.exportButtonAnchorEl,\n        open: Boolean(this.state.exportButtonAnchorEl),\n        onClose: function onClose() {\n          return _this3.setState({\n            exportButtonAnchorEl: null\n          });\n        }\n      }, React.createElement(_core.MenuItem, {\n        key: \"export-csv\",\n        onClick: this.exportCsv\n      }, localization.exportName))), React.createElement(this.props.components.Actions, {\n        actions: this.props.actions && this.props.actions.filter(function (a) {\n          return a.isFreeAction;\n        })\n      }));\n    }\n  }, {\n    key: \"renderSelectedActions\",\n    value: function renderSelectedActions() {\n      return React.createElement(React.Fragment, null, this.renderSearch(), React.createElement(this.props.components.Actions, {\n        actions: this.props.actions.filter(function (a) {\n          return !a.isFreeAction;\n        }),\n        data: this.props.selectedRows\n      }));\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      return React.createElement(\"div\", null, this.props.selectedRows && this.props.selectedRows.length > 0 ? this.renderSelectedActions() : this.renderDefaultActions());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var localization = (0, _objectSpread2.default)({}, MTableToolbar.defaultProps.localization, this.props.localization);\n      var title = this.props.showTitle ? this.props.selectedRows && this.props.selectedRows.length > 0 ? localization.nRowsSelected.replace('{0}', this.props.selectedRows.length) : this.props.title : null;\n      return React.createElement(_core.Toolbar, {\n        className: (0, _classnames.default)(classes.root, (0, _defineProperty2.default)({}, classes.highlight, this.props.selectedRows && this.props.selectedRows.length > 0))\n      }, title && React.createElement(\"div\", {\n        className: classes.title\n      }, React.createElement(_core.Typography, {\n        variant: \"h6\"\n      }, title)), this.props.toolbarButtonAlignment === 'right' && React.createElement(\"div\", {\n        className: classes.spacer\n      }), React.createElement(\"div\", {\n        className: classes.actions\n      }, this.renderActions()));\n    }\n  }]);\n  return MTableToolbar;\n}(React.Component);\n\nMTableToolbar.defaultProps = {\n  actions: [],\n  columns: [],\n  columnsButton: false,\n  localization: {\n    addRemoveColumns: 'Add or remove columns',\n    nRowsSelected: '{0} row(s) selected',\n    showColumnsTitle: 'Show Columns',\n    showColumnsAriaLabel: 'Show Columns',\n    exportTitle: 'Export',\n    exportAriaLabel: 'Export',\n    exportName: 'Export as CSV',\n    searchTooltip: 'Search'\n  },\n  search: true,\n  showTitle: true,\n  toolbarButtonAlignment: 'right',\n  searchText: '',\n  selectedRows: [],\n  title: 'No Title!'\n};\nMTableToolbar.propTypes = {\n  actions: _propTypes.default.array,\n  columns: _propTypes.default.array,\n  columnsButton: _propTypes.default.bool,\n  localization: _propTypes.default.object.isRequired,\n  onColumnsChanged: _propTypes.default.func.isRequired,\n  onSearchChanged: _propTypes.default.func.isRequired,\n  search: _propTypes.default.bool.isRequired,\n  searchFieldStyle: _propTypes.default.object,\n  searchText: _propTypes.default.string.isRequired,\n  selectedRows: _propTypes.default.array,\n  title: _propTypes.default.string.isRequired,\n  showTitle: _propTypes.default.bool.isRequired,\n  toolbarButtonAlignment: _propTypes.default.string.isRequired,\n  renderData: _propTypes.default.array,\n  exportButton: _propTypes.default.bool,\n  exportDelimiter: _propTypes.default.string,\n  exportFileName: _propTypes.default.string,\n  classes: _propTypes.default.object\n};\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      paddingRight: theme.spacing.unit\n    },\n    highlight: theme.palette.type === 'light' ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: (0, _colorManipulator.lighten)(theme.palette.secondary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    spacer: {\n      flex: '1 1 10%'\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: '0 0 auto'\n    },\n    searchField: {\n      paddingLeft: theme.spacing.unit * 2\n    }\n  };\n};\n\nvar _default = (0, _core.withStyles)(styles)(MTableToolbar);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}