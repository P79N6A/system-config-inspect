{"ast":null,"code":"import _classCallCheck from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Develop\\\\React Projects\\\\system-config-inspect\\\\src\\\\pages\\\\inspect-result\\\\echarts\\\\RiskTypeBar.js\";\nimport React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport ECharts from 'echarts/lib/echarts';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '90%'\n    }\n  };\n};\n\nvar RiskTypeBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RiskTypeBar, _Component);\n\n  function RiskTypeBar() {\n    _classCallCheck(this, RiskTypeBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RiskTypeBar).apply(this, arguments));\n  }\n\n  _createClass(RiskTypeBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // 基于准备好的dom，初始化echarts实例\n      var myChart = ECharts.init(document.getElementById('root')); // 绘制图表\n\n      myChart.setOption({\n        title: {\n          text: '检测结果'\n        },\n        tooltip: {},\n        xAxis: {\n          data: ['系统服务', '账号配置', '防火墙', '审计配置', '自定义']\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            formatter: '漏洞数{value}'\n          }\n        },\n        series: [{\n          name: 'WinServer',\n          type: 'bar',\n          barGap: 0,\n          label: labelOption,\n          data: [320, 332, 301, 334, 390]\n        }, {\n          name: 'Kali2',\n          type: 'bar',\n          label: labelOption,\n          data: [220, 182, 191, 234, 290]\n        }, {\n          name: 'Centos7',\n          type: 'bar',\n          label: labelOption,\n          data: [150, 232, 201, 154, 190]\n        }, {\n          name: 'Ubuntu16',\n          type: 'bar',\n          label: labelOption,\n          data: [98, 77, 101, 99, 40]\n        }]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var code = \"<ReactEcharts \" + \"    option={this.getOption()} \" + \"    style={{height: '350px', width: '1000px'}}  \" + \"    className='react_for_echarts' />\";\n      return React.createElement(ReactEcharts, {\n        option: this.getOption(),\n        style: {\n          height: '350px',\n          width: '1000px'\n        },\n        className: \"react_for_echarts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return RiskTypeBar;\n}(Component);\n\nRiskTypeBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nRiskTypeBar.contextTypes = {\n  router: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(RiskTypeBar);","map":{"version":3,"sources":["E:\\Develop\\React Projects\\system-config-inspect\\src\\pages\\inspect-result\\echarts\\RiskTypeBar.js"],"names":["React","Component","ReactEcharts","ECharts","PropTypes","withStyles","styles","theme","root","width","RiskTypeBar","myChart","init","document","getElementById","setOption","title","text","tooltip","xAxis","data","yAxis","type","axisLabel","formatter","series","name","barGap","label","labelOption","code","getOption","height","propTypes","classes","object","isRequired","contextTypes","router"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE;AADL;AADe,GAAL;AAAA,CAApB;;IAOMC,W;;;;;;;;;;;;;wCACkB;AAChB;AACA,UAAIC,OAAO,GAAGR,OAAO,CAACS,IAAR,CAAaC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb,CAAd,CAFgB,CAGhB;;AACAH,MAAAA,OAAO,CAACI,SAAR,CAAkB;AACdC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADO;AAEdC,QAAAA,OAAO,EAAE,EAFK;AAGdC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,EAAwB,MAAxB,EAAgC,KAAhC;AADH,SAHO;AAMdC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,OADH;AAEHC,UAAAA,SAAS,EAAE;AACPC,YAAAA,SAAS,EAAE;AADJ;AAFR,SANO;AAYdC,QAAAA,MAAM,EAAE,CACJ;AACIC,UAAAA,IAAI,EAAE,WADV;AAEIJ,UAAAA,IAAI,EAAE,KAFV;AAGIK,UAAAA,MAAM,EAAE,CAHZ;AAIIC,UAAAA,KAAK,EAAEC,WAJX;AAKIT,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB;AALV,SADI,EAQJ;AACIM,UAAAA,IAAI,EAAE,OADV;AAEIJ,UAAAA,IAAI,EAAE,KAFV;AAGIM,UAAAA,KAAK,EAAEC,WAHX;AAIIT,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB;AAJV,SARI,EAcJ;AACIM,UAAAA,IAAI,EAAE,SADV;AAEIJ,UAAAA,IAAI,EAAE,KAFV;AAGIM,UAAAA,KAAK,EAAEC,WAHX;AAIIT,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB;AAJV,SAdI,EAoBJ;AACIM,UAAAA,IAAI,EAAE,UADV;AAEIJ,UAAAA,IAAI,EAAE,KAFV;AAGIM,UAAAA,KAAK,EAAEC,WAHX;AAIIT,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,EAAc,EAAd,EAAkB,EAAlB;AAJV,SApBI;AAZM,OAAlB;AAwCH;;;6BAGQ;AACL,UAAIU,IAAI,GAAG,mBACP,gCADO,GAEP,kDAFO,GAGP,sCAHJ;AAIA,aACI,oBAAC,YAAD;AACI,QAAA,MAAM,EAAE,KAAKC,SAAL,EADZ;AAEI,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,OAAV;AAAmBvB,UAAAA,KAAK,EAAE;AAA1B,SAFX;AAGI,QAAA,SAAS,EAAC,mBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMH;;;;EA3DqBR,S;;AA8D1BS,WAAW,CAACuB,SAAZ,GAAwB;AACpBC,EAAAA,OAAO,EAAE9B,SAAS,CAAC+B,MAAV,CAAiBC;AADN,CAAxB;AAIA1B,WAAW,CAAC2B,YAAZ,GAA2B;AACvBC,EAAAA,MAAM,EAAElC,SAAS,CAAC+B,MAAV,CAAiBC;AADF,CAA3B;AAIA,eAAe/B,UAAU,CAACC,MAAD,CAAV,CAAmBI,WAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport ECharts from 'echarts/lib/echarts'\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '90%',\r\n    },\r\n\r\n});\r\n\r\nclass RiskTypeBar extends Component {\r\n    componentDidMount() {\r\n        // 基于准备好的dom，初始化echarts实例\r\n        var myChart = ECharts.init(document.getElementById('root'));\r\n        // 绘制图表\r\n        myChart.setOption({\r\n            title: { text: '检测结果' },\r\n            tooltip: {},\r\n            xAxis: {\r\n                data: ['系统服务', '账号配置', '防火墙', '审计配置', '自定义']\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                axisLabel: {\r\n                    formatter: '漏洞数{value}'\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'WinServer',\r\n                    type: 'bar',\r\n                    barGap: 0,\r\n                    label: labelOption,\r\n                    data: [320, 332, 301, 334, 390]\r\n                },\r\n                {\r\n                    name: 'Kali2',\r\n                    type: 'bar',\r\n                    label: labelOption,\r\n                    data: [220, 182, 191, 234, 290]\r\n                },\r\n                {\r\n                    name: 'Centos7',\r\n                    type: 'bar',\r\n                    label: labelOption,\r\n                    data: [150, 232, 201, 154, 190]\r\n                },\r\n                {\r\n                    name: 'Ubuntu16',\r\n                    type: 'bar',\r\n                    label: labelOption,\r\n                    data: [98, 77, 101, 99, 40]\r\n                }\r\n            ]\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        let code = \"<ReactEcharts \" +\r\n            \"    option={this.getOption()} \" +\r\n            \"    style={{height: '350px', width: '1000px'}}  \" +\r\n            \"    className='react_for_echarts' />\";\r\n        return (\r\n            <ReactEcharts\r\n                option={this.getOption()}\r\n                style={{ height: '350px', width: '1000px' }}\r\n                className='react_for_echarts' />\r\n        );\r\n    }\r\n}\r\n\r\nRiskTypeBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nRiskTypeBar.contextTypes = {\r\n    router: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(RiskTypeBar);\r\n\r\n"]},"metadata":{},"sourceType":"module"}